# ::id tatoeba_eng.1
# ::snt I met a dog on my way home .
(m / meet-02
       :ARG0 (ii / i)
       :ARG1 (d / dog)
       :time (w / way
             :direction (h / home)
             :poss ii))

# ::id tatoeba_eng.2
# ::snt He loves you as much as I do .
(l / love-01
       :ARG0 (h / he)
       :ARG1 (y / you)
       :ARG2-of (h2 / have-degree-91
             :ARG1 h
             :ARG3 (e / equal)
             :ARG4 (l2 / love-01
                   :ARG0 (ii / i)
                   :ARG1 y)))

# ::id tatoeba_eng.3
# ::snt I did what Tom asked me to do .
(d / do-02
       :ARG0 (ii / i)
       :ARG1 (t / thing
             :ARG1-of (d2 / do-02
                   :ARG0 ii
                   :ARG1-of (a / ask-02
                         :ARG0 (p / person
                               :name (n / name
                                     :op1 "Tom"))
                         :ARG2 ii))))

# ::id tatoeba_eng.4
# ::snt I met Tom on my way to school .
(m / meet-02
       :ARG0 (ii / i)
       :ARG1 (p / person
             :name (n / name
                   :op1 "Tom"))
       :time (g / go-02
             :ARG0 ii
             :ARG4 (s / school)))

# ::id tatoeba_eng.5
# ::snt This desk is a bit low for me .
(l / low-04
       :ARG1 (d / desk
             :mod (t / this))
       :ARG3 (ii / i)
       :degree (b / bit))

# ::id tatoeba_eng.6
# ::snt Tom has as many books as I do .
(h / have-03
       :ARG0 (p / person
             :name (n / name
                   :op1 "Tom"))
       :ARG1 (b / book
             :ARG1-of (h2 / have-quant-91
                   :ARG3 (e / equal)
                   :ARG4 (b2 / book
                         :ARG1-of (h3 / have-03
                               :ARG0 (ii / i))))))

# ::id tatoeba_eng.7
# ::snt Why do you want to talk to me ?
(c / cause-01
       :ARG0 (a / amr-unknown)
       :ARG1 (w / want-01
             :ARG0 (y / you)
             :ARG1 (t / talk-01
                   :ARG0 y
                   :ARG2 (ii / i))))

# ::id tatoeba_eng.8
# ::snt I don ' t know why Tom is so mad .
(k / know-01
       :polarity -
       :ARG0 (ii / i)
       :ARG1 (t / thing
             :ARG0-of (c / cause-01
                   :ARG1 (m / mad-04
                         :ARG1 (p / person
                               :name (n / name
                                     :op1 "Tom"))
                         :degree (s / so)))))

# ::id tatoeba_eng.9
# ::snt I don ' t want to be rude to Tom .
(w / want-01
       :polarity -
       :ARG0 (ii / i)
       :ARG1 (r / rude-01
             :ARG0 ii
             :ARG1 (p / person
                   :name (n / name
                         :op1 "Tom"))))

# ::id tatoeba_eng.10
# ::snt I had no idea Tom was on board .
(k / know-01
       :polarity -
       :ARG0 (ii / i)
       :ARG1 (b / board-01
             :ARG0 (p / person
                   :name (n / name
                         :op1 "Tom"))))

# ::id tatoeba_eng.11
# ::snt I wish I could fly like a bird .
(w / wish-01
       :ARG0 (ii / i)
       :ARG1 (p / possible-01
             :ARG1 (f / fly-01
                   :ARG1 ii
                   :ARG1-of (r / resemble-01
                         :ARG2 (b / bird)))))

# ::id tatoeba_eng.12
# ::snt I ' d like to drink a cup of tea .
(l / like-02
       :ARG0 (ii / i)
       :ARG1 (d / drink-01
             :ARG0 ii
             :ARG1 (t / tea
                   :quant (v / volume-quantity
                         :quant 1
                         :unit (c / cup)))))

# ::id tatoeba_eng.13
# ::snt It ' s time for you to go to bed .
(b / be-temporally-at-91
       :ARG1 (b2 / bed-down-01
             :ARG0 (y / you))
       :ARG2 (n / now))

# ::id tatoeba_eng.14
# ::snt Tom has as many stamps as I do .
(h / have-03
       :ARG0 (p / person
             :name (n / name
                   :op1 "Tom"))
       :ARG1 (s / stamp
             :ARG1-of (h2 / have-quant-91
                   :ARG3 (e / equal)
                   :ARG4 (s2 / stamp
                         :ARG1-of (h3 / have-03
                               :ARG0 (ii / i))))))

# ::id tatoeba_eng.15
# ::snt Why did you want to talk to me ?
(w / want-01
       :ARG0 (y / you)
       :ARG1 (t / talk-01
             :ARG0 y
             :ARG2 (ii / i))
       :purpose (a / amr-unknown))

# ::id tatoeba_eng.16
# ::snt As far as I know , he won ' t come .
(c / come-01
       :polarity -
       :ARG1 (h / he)
       :concession (a / as-far-as
             :op1 (k / know-01
                   :ARG0 (ii / i))))

# ::id tatoeba_eng.17
# ::snt Do you have a son or a daughter ?
(h / have-03
       :ARG0 (y / you)
       :ARG1 (o / or
             :op1 (p / person
                   :ARG0-of (h2 / have-rel-role-91
                         :ARG1 y
                         :ARG2 (s / son)))
             :op2 (p2 / person
                   :ARG0-of (h3 / have-rel-role-91
                         :ARG1 y
                         :ARG2 (d / daughter))))
       :polarity (a / amr-unknown))

# ::id tatoeba_eng.18
# ::snt He gave his seat to the old man .
(g / give-01
       :ARG0 (h / he)
       :ARG1 (s / seat
             :poss h)
       :ARG2 (m / man
             :mod (o / old)))

# ::id tatoeba_eng.19
# ::snt I don ' t know if I have the time .
(k / know-01
       :polarity -
       :ARG0 (ii / i)
       :ARG1 (t / truth-value
             :polarity-of (h / have-03
                   :ARG0 ii
                   :ARG1 (t2 / time))))

# ::id tatoeba_eng.20
# ::snt I don ' t know if I still have it .
(k / know-01
       :polarity -
       :ARG0 (ii / i)
       :ARG1 (t / truth-value
             :polarity-of (h / have-03
                   :ARG0 ii
                   :ARG1 (ii2 / it)
                   :mod (s / still))))

# ::id tatoeba_eng.21
# ::snt I know how much it means to you .
(k / know-01
       :ARG0 (ii / i)
       :ARG1 (t / thing
             :ARG2-of (m / mean-01
                   :ARG1 (ii2 / it)
                   :ARG3 (y / you))))

# ::id tatoeba_eng.22
# ::snt I wish I could sing like you do .
(w / wish-01
       :ARG0 (ii / i)
       :ARG1 (p / possible-01
             :ARG1 (s / sing-01
                   :ARG0 ii
                   :ARG1-of (r / resemble-01
                         :ARG2 (s2 / sing-01
                               :ARG0 (y / you))))))

# ::id tatoeba_eng.23
# ::snt She has a cat . The cat is white .
(m / multi-sentence
       :snt1 (h / have-03
             :ARG0 (s / she)
             :ARG1 (c / cat))
       :snt2 (w / white-03
             :ARG1 (c2 / cat)))

# ::id tatoeba_eng.24
# ::snt Tom can eat as much as he wants .
(p / possible-01
       :ARG1 (e / eat-01
             :ARG0 (p2 / person
                   :name (n / name
                         :op1 "Tom"))
             :ARG1 (t / thing
                   :ARG1-of (h / have-quant-91
                         :ARG3 (e2 / equal)
                         :ARG4 (t2 / thing
                               :ARG1-of (e3 / eat-01
                                     :ARG0 p2
                                     :ARG1-of (w / want-01
                                           :ARG0 p2)))))))

# ::id tatoeba_eng.25
# ::snt We all have a right to be happy .
(r / right-05
       :ARG1 (w / we
             :mod (a / all))
       :ARG2 (h / happy-01
             :ARG1 w))

# ::id tatoeba_eng.26
# ::snt We use a lot of water every day .
(u / use-01
       :ARG0 (w / we)
       :ARG1 (w2 / water
             :quant (l / lot))
       :frequency (r / rate-entity-91
             :ARG3 (t / temporal-quantity
                   :quant 1
                   :unit (d / day))))

# ::id tatoeba_eng.27
# ::snt You don ' t know who I am , do you ?
(k / know-01
       :polarity -
       :ARG0 (y / you)
       :ARG1 (ii / i)
       :ARG1-of (r / request-confirmation-91))

# ::id tatoeba_eng.28
# ::snt He is not a teacher but a doctor .
(c / contrast-01
       :ARG1 (p / person
             :polarity -
             :ARG0-of (t / teach-01)
             :domain (h / he))
       :ARG2 (p2 / person
             :ARG0-of (d / doctor-01)
             :domain h))

# ::id tatoeba_eng.29
# ::snt I can see why you don ' t like Tom .
(p / possible-01
       :ARG1 (s / see-01
             :ARG0 (ii / i)
             :ARG1 (t / thing
                   :ARG0-of (c / cause-01
                         :ARG1 (d / dislike-01
                               :ARG0 (y / you)
                               :ARG1 (p2 / person
                                     :name (n / name
                                           :op1 "Tom")))))))

# ::id tatoeba_eng.30
# ::snt I have a hunch that it will rain .
(h / have-03
       :ARG0 (ii / i)
       :ARG1 (h2 / hunch-01
             :ARG0 ii
             :ARG1 (r / rain-01)))

# ::id tatoeba_eng.31
# ::snt I wish I could go with you today .
(w / wish-01
       :ARG0 (ii / i)
       :ARG1 (p / possible-01
             :ARG1 (g / go-02
                   :ARG0 ii
                   :accompanier (y / you)
                   :time (t / today))))

# ::id tatoeba_eng.32
# ::snt It was dark and cold in the room .
(a / and
       :op1 (d / dark-03
             :ARG1 (r / room))
       :op2 (c / cold-01
             :ARG1 r))

# ::id tatoeba_eng.33
# ::snt The worst they can do is kill me .
(k / kill-01
       :ARG0 (t / they)
       :ARG1 (ii / i)
       :ARG1-of (p / possible-01)
       :ARG1-of (h / have-degree-91
             :ARG2 (b / bad-07
                   :ARG1 k)
             :ARG3 (m / most)))

# ::id tatoeba_eng.34
# ::snt Tom says he has to wait for Mary .
(s / say-01
       :ARG0 (p / person
             :name (n / name
                   :op1 "Tom"))
       :ARG1 (o / obligate-01
             :ARG1 p
             :ARG2 (w / wait-01
                   :ARG1 p
                   :ARG2 (p2 / person
                         :name (n2 / name
                               :op1 "Mary")))))

# ::id tatoeba_eng.35
# ::snt We have to make up for lost time .
(o / obligate-01
       :ARG1 (w / we)
       :ARG2 (m / make-up-16
             :ARG0 w
             :ARG1 (t / time
                   :ARG1-of (l / lose-02
                         :ARG0 w))))

# ::id tatoeba_eng.36
# ::snt You can stay as long as you like .
(p / possible-01
       :ARG1 (s / stay-01
             :ARG1 (y / you)
             :duration (l / like-02
                   :ARG0 y)))

# ::id tatoeba_eng.37
# ::snt You may talk as much as you like .
(p / permit-01
       :ARG1 (t / talk-01
             :ARG0 (y / you)
             :ARG1-of (l / like-02
                   :ARG0 y)
             :quant (m / much)))

# ::id tatoeba_eng.38
# ::snt How do you count to ten in French ?
(c / count-01
       :ARG0 (y / you)
       :ARG2 10
       :manner (l / language
             :name (n / name
                   :op1 "French"))
       :manner (a / amr-unknown))

# ::id tatoeba_eng.39
# ::snt I don ' t like you and I never will .
(a / and
       :op1 (d / dislike-01
             :ARG0 (ii / i)
             :ARG1 (y / you))
       :op2 (d2 / dislike-01
             :polarity -
             :ARG0 ii
             :ARG1 y
             :time (e / ever)))

# ::id tatoeba_eng.40
# ::snt I don ' t think he knows I love you .
(t / think-01
       :polarity -
       :ARG0 (ii / i)
       :ARG1 (k / know-01
             :ARG0 (h / he)
             :ARG1 (l / love-01
                   :ARG0 ii
                   :ARG1 (y / you))))

# ::id tatoeba_eng.41
# ::snt I have a lot of problems to solve .
(h / have-03
       :ARG0 (ii / i)
       :ARG1 (p / problem
             :quant (l / lot)
             :ARG1-of (s / solve-01
                   :ARG0 ii)))

# ::id tatoeba_eng.42
# ::snt I just wish I could see Tom again .
(w / wish-01
       :ARG0 (ii / i)
       :ARG1 (p / possible-01
             :ARG1 (s / see-01
                   :ARG0 ii
                   :ARG1 (p2 / person
                         :name (n / name
                               :op1 "Tom"))
                   :mod (a / again)))
       :mod (j / just))

# ::id tatoeba_eng.43
# ::snt I sat down on a bench next to Tom .
(s / sit-down-02
       :ARG1 (ii / i)
       :ARG2 (b / bench)
       : (n / next-to
             :op1 (p / person
                   :name (n2 / name
                         :op1 "Tom"))))

# ::id tatoeba_eng.44
# ::snt I think Tom was trying to kill us .
(t / think-01
       :ARG0 (ii / i)
       :ARG1 (t2 / try-01
             :ARG0 (p / person
                   :name (n / name
                         :op1 "Tom"))
             :ARG1 (k / kill-01
                   :ARG0 p
                   :ARG1 (w / we))))

# ::id tatoeba_eng.45
# ::snt I think you ought to rest a while .
(t / think-01
       :ARG0 (ii / i)
       :ARG1 (r / recommend-01
             :ARG0 ii
             :ARG1 (r2 / rest-01
                   :ARG1 (y / you)
                   :duration (w / while))))

# ::id tatoeba_eng.46
# ::snt I wish I had a reason not to stay .
(w / wish-01
       :ARG0 (ii / i)
       :ARG1 (h / have-03
             :ARG0 ii
             :ARG1 (r / reason
                   :ARG0-of (c / cause-01
                         :ARG1 (s / stay-01
                               :polarity -
                               :ARG1 ii)))))

# ::id tatoeba_eng.47
# ::snt I wish I had enough time to sleep .
(w / wish-01
       :ARG0 (ii / i)
       :ARG1 (h / have-03
             :ARG0 ii
             :ARG1 (t / time
                   :ARG1-of (h2 / have-quant-91
                         :ARG3 (e / enough)
                         :ARG6 (s / sleep-01
                               :ARG0 ii)))))

# ::id tatoeba_eng.48
# ::snt It is not far away from the hotel .
(b / be-located-at-91
       :ARG1 (ii / it)
       :ARG2 (a / away
             :op1 (h / hotel)
             :quant (f / far
                   :polarity -)))

# ::id tatoeba_eng.49
# ::snt The door was opened by a tall man .
(o / open-01
       :ARG0 (m / man
             :mod (t / tall))
       :ARG1 (d / door))

# ::id tatoeba_eng.50
# ::snt Tom and I have the same last name .
(s / same-01
       :ARG1 (n / name
             :poss (ii / i))
       :ARG2 (n2 / name
             :poss (p / person
                   :name (n3 / name
                         :op1 "Tom"))))

# ::id tatoeba_eng.51
# ::snt Tom doesn ' t know how to tie a tie .
(k / know-03
       :polarity -
       :ARG0 (p / person
             :name (n / name
                   :op1 "Tom"))
       :ARG1 (t / tie-01
             :ARG0 p))

# ::id tatoeba_eng.52
# ::snt We want to talk to you about that .
(w / want-01
       :ARG0 (w2 / we)
       :ARG1 (t / talk-01
             :ARG0 w2
             :ARG1 (t2 / that)
             :ARG2 (y / you)))

# ::id tatoeba_eng.53
# ::snt You and I have the same last name .
(s / same-01
       :ARG1 (n / name
             :mod (l / last))
       :ARG2 (a / and
             :op1 (y / you)
             :op2 (ii / i)))

# ::id tatoeba_eng.54
# ::snt All I want to do is make you happy .
(w / want-01
       :ARG0 (ii / i)
       :ARG1 (m / make-02
             :ARG0 ii
             :ARG1 (h / happy-01
                   :ARG1 (y / you)))
       :mod (a / all))

# ::id tatoeba_eng.55
# ::snt Are you ready to hear the bad news ?
(r / ready-01
       :polarity (a / amr-unknown)
       :ARG1 (y / you)
       :ARG2 (h / hear-01
             :ARG0 y
             :ARG1 (n / news
                   :ARG1-of (b / bad-07))))

# ::id tatoeba_eng.56
# ::snt Can you take me to Boston with you ?
(p / possible-01
       :ARG1 (a / accompany-01
             :ARG0 (y / you)
             :ARG1 (ii / i)
             :ARG4 (c / city
                   :name (n / name
                         :op1 "Boston")))
       :polarity (a2 / amr-unknown))

# ::id tatoeba_eng.57
# ::snt Do you have a T - shirt I can borrow ?
(h / have-03
       :ARG0 (y / you)
       :ARG1 (t / t-shirt
             :ARG1-of (b / borrow-01
                   :ARG0 (ii / i)
                   :ARG1-of (p / possible-01)))
       :polarity (a / amr-unknown))

# ::id tatoeba_eng.58
# ::snt Do you think I should go to Boston ?
(t / think-01
       :ARG0 (y / you)
       :ARG1 (r / recommend-01
             :ARG1 (g / go-02
                   :ARG0 (ii / i)
                   :ARG4 (c / city
                         :name (n / name
                               :op1 "Boston"))))
       :polarity (a / amr-unknown))

# ::id tatoeba_eng.59
# ::snt He is the man who drew the picture .
(m / man
       :domain (h / he)
       :ARG0-of (d / draw-01
             :ARG1 (p / picture)))

# ::id tatoeba_eng.60
# ::snt He stood up and took a deep breath .
(a / and
       :op1 (s / stand-up-07
             :ARG1 (h / he))
       :op2 (b / breathe-01
             :ARG0 h
             :ARG1-of (d / deep-02)))

# ::id tatoeba_eng.61
# ::snt How many books do you read a month ?
(r / read-01
       :ARG0 (y / you)
       :ARG1 (b / book
             :quant (a / amr-unknown))
       :frequency (t / temporal-quantity
             :quant 1
             :unit (m / month)))

# ::id tatoeba_eng.62
# ::snt I believe that ' s all I have to say .
(b / believe-01
       :ARG0 (ii / i)
       :ARG1 (h / have-03
             :ARG0 ii
             :ARG1 (t / thing
                   :ARG1-of (s / say-01
                         :ARG0 ii)
                   :mod (a / all))))

# ::id tatoeba_eng.63
# ::snt I don ' t like the food at that deli .
(d / dislike-01
       :ARG0 (ii / i)
       :ARG1 (f / food
             :location (d2 / deli
                   :mod (t / that))))

# ::id tatoeba_eng.64
# ::snt I go to bed at around ten at night .
(g / go-02
       :ARG0 (ii / i)
       :ARG1 (b / bed-down-01
             :ARG0 ii)
       :time (a / around
             :op1 (d / date-entity
                   :time "10:00"
                   :dayperiod (n / night))))

# ::id tatoeba_eng.65
# ::snt I hope to marry that woman one day .
(h / hope-01
       :ARG0 (ii / i)
       :ARG1 (m / marry-01
             :ARG1 ii
             :ARG2 (w / woman
                   :mod (t / that))
             :time (d / day
                   :mod (o / one))))

# ::id tatoeba_eng.66
# ::snt I met an old friend on my way home .
(m / meet-02
       :ARG0 (ii / i)
       :ARG1 (p / person
             :ARG0-of (h / have-rel-role-91
                   :ARG1 ii
                   :ARG2 (f / friend)
                   :time (o / old)))
       :time (w / way
             :direction (h2 / home)
             :poss ii))

# ::id tatoeba_eng.67
# ::snt I think Tom can help you with that .
(t / think-01
       :ARG0 (ii / i)
       :ARG1 (p / possible-01
             :ARG1 (h / help-01
                   :ARG0 (p2 / person
                         :name (n / name
                               :op1 "Tom"))
                   :ARG1 (t2 / that)
                   :ARG2 (y / you))))

# ::id tatoeba_eng.68
# ::snt I think three years is a long time .
(t / think-01
       :ARG0 (ii / i)
       :ARG1 (t2 / time
             :ARG1-of (l / long-03)
             :domain (t3 / temporal-quantity
                   :quant 3
                   :unit (y / year))))

# ::id tatoeba_eng.69
# ::snt I ' ll ask Tom to give me some money .
(a / ask-02
       :ARG0 (ii / i)
       :ARG1 (g / give-01
             :ARG0 (p / person
                   :name (n / name
                         :op1 "Tom"))
             :ARG1 (m / money
                   :quant (s / some))
             :ARG2 ii)
       :ARG2 p)

# ::id tatoeba_eng.70
# ::snt It is our duty to help one another .
(d / duty
       :poss (w / we)
       :domain (h / help-01
             :ARG0 w
             :ARG1 (a / another
                   :mod (o / one))))

# ::id tatoeba_eng.71
# ::snt Let me have a look at it , will you ?
(l / let-01
       :mode imperative
       :polite +
       :ARG0 (y / you)
       :ARG1 (l2 / look-01
             :ARG0 (ii / i)
             :ARG1 (ii2 / it))
       :ARG1-of (r / request-confirmation-91))

# ::id tatoeba_eng.72
# ::snt Let me see the palms of your hands .
(l / let-01
       :mode imperative
       :ARG0 (y / you
             :part (h / hand))
       :ARG1 (s / see-01
             :ARG0 (ii / i)
             :ARG1 (p / palm
                   :part-of h)))

# ::id tatoeba_eng.73
# ::snt The lion is the king of the jungle .
(p / person
       :ARG0-of (h / have-org-role-91
             :ARG1 (j / jungle)
             :ARG2 (k / king))
       :domain (l / lion))

# ::id tatoeba_eng.74
# ::snt There ' s so much I want to tell you .
(w / want-01
       :ARG0 (ii / i)
       :ARG1 (t / tell-01
             :ARG0 ii
             :ARG1 (t2 / thing
                   :quant (m / much
                         :degree (s / so)))
             :ARG2 (y / you)))

# ::id tatoeba_eng.75
# ::snt This is someone I want you to meet .
(s / someone
       :domain (t / this)
       :ARG1-of (m / meet-02
             :ARG0 (y / you)
             :ARG1-of (w / want-01
                   :ARG0 (ii / i)
                   :ARG2 y)))

# ::id tatoeba_eng.76
# ::snt To drive a car , you need a license .
(n / need-01
       :ARG0 (y / you)
       :ARG1 (l / license-01
             :ARG1 (d / drive-01
                   :ARG0 y
                   :ARG1 (c / car))))

# ::id tatoeba_eng.77
# ::snt Tom looked as if he ' d seen a ghost .
(l / look-02
       :ARG0 (p / person
             :name (n / name
                   :op1 "Tom"))
       :ARG1 (g / ghost))

# ::id tatoeba_eng.78
# ::snt Try to speak as clearly as you can .
(t / try-01
       :mode imperative
       :ARG0 (y / you)
       :ARG1 (s / speak-01
             :ARG0 y
             :manner (c / clear-08
                   :ARG2-of (h / have-degree-91
                         :ARG1 s
                         :ARG3 (e / equal)
                         :ARG4 (p / possible-01
                               :ARG1 s)))))

# ::id tatoeba_eng.79
# ::snt Where can I obtain a map of Europe ?
(p / possible-01
       :ARG1 (o / obtain-01
             :ARG0 (ii / i)
             :ARG1 (m / map
                   :topic (c / continent
                         :name (n / name
                               :op1 "Europe")))
             :location (a / amr-unknown)))

# ::id tatoeba_eng.80
# ::snt Why does Tom have to do that today ?
(o / obligate-01
       :ARG1 (p / person
             :name (n / name
                   :op1 "Tom"))
       :ARG2 (d / do-02
             :ARG0 p
             :ARG1 (t / that)
             :time (t2 / today))
       :purpose (a / amr-unknown))

# ::id tatoeba_eng.81
# ::snt You can go wherever you want to go .
(p / possible-01
       :ARG1 (g / go-02
             :ARG0 (y / you)
             :ARG4 (l / location
                   :ARG0 y
                   :ARG1-of (w / want-01
                         :ARG0 y))
             :ARG4 l))

# ::id tatoeba_eng.82
# ::snt You may still do it if you want to .
(p / possible-01
       :ARG1 (d / do-02
             :ARG0 (y / you)
             :ARG1 (ii / it)
             :mod (s / still))
       :condition (w / want-01
             :ARG0 y
             :ARG1 d))

# ::id tatoeba_eng.83
# ::snt Are you sure this is the right room ?
(s / sure-02
       :polarity (a / amr-unknown)
       :ARG0 (y / you)
       :ARG1 (r / room
             :ARG1-of (r2 / right-03)
             :domain (t / this)))

# ::id tatoeba_eng.84
# ::snt Do you have a table near the window ?
(h / have-03
       :polarity (a / amr-unknown)
       :ARG0 (y / you)
       :ARG1 (t / table
             :ARG1-of (n / near-02
                   :ARG2 (w / window))))

# ::id tatoeba_eng.85
# ::snt Do you want me to call an ambulance ?
(w / want-01
       :polarity (a / amr-unknown)
       :ARG0 (y / you)
       :ARG1 (c / call-02
             :ARG0 (ii / i)
             :ARG1 (a2 / ambulance)))

# ::id tatoeba_eng.86
# ::snt He has a lot more money than I have .
(h / have-quant-91
       :ARG1 (m / money
             :ARG1-of (h2 / have-03
                   :ARG0 (h3 / he)))
       :ARG3 (m2 / more
             :quant (l / lot))
       :ARG4 (m3 / money
             :ARG1-of (h4 / have-03
                   :ARG0 (ii / i))))

# ::id tatoeba_eng.87
# ::snt He stood on the surface of the moon .
(s / stand-01
       :ARG0 (h / he)
       :ARG2 (s2 / surface
             :part-of (m / moon)))

# ::id tatoeba_eng.88
# ::snt Her mother has made her what she is .
(m / make-01
       :ARG0 (p / person
             :ARG0-of (h / have-rel-role-91
                   :ARG1 (s / she)
                   :ARG2 (m2 / mother)))
       :ARG1 s)

# ::id tatoeba_eng.89
# ::snt How far is it from here to the park ?
(f / far
       :extent (a / amr-unknown)
       :source (h / here)
       :destination (p / park))

# ::id tatoeba_eng.90
# ::snt I burst out laughing when I saw him .
(b / burst-01
       :ARG1 (ii / i)
       :ARG2 (l / laugh-01
             :ARG0 ii)
       :time (s / see-01
             :ARG0 ii
             :ARG1 (h / he)))

# ::id tatoeba_eng.91
# ::snt I did everything Tom asked me to do .
(d / do-02
       :ARG0 (ii / i)
       :ARG1 (e / everything
             :ARG1-of (d2 / do-02
                   :ARG0 ii
                   :ARG1-of (a / ask-02
                         :ARG0 (p / person
                               :name (n / name
                                     :op1 "Tom"))
                         :ARG2 ii))))

# ::id tatoeba_eng.92
# ::snt I don ' t have time to argue with you .
(h / have-03
       :polarity -
       :ARG0 (ii / i)
       :ARG1 (t / time
             :purpose (a / argue-02
                   :ARG0 ii
                   :ARG1 (y / you))))

# ::id tatoeba_eng.93
# ::snt I hope that the weather will be dry .
(h / hope-01
       :ARG0 (ii / i)
       :ARG1 (d / dry-02
             :ARG1 (w / weather)))

# ::id tatoeba_eng.94
# ::snt I said I ' d buy you a drink , so here .
(c / cause-01
       :ARG0 (s / say-01
             :ARG0 (ii / i)
             :ARG1 (b / buy-01
                   :ARG0 ii
                   :ARG1 (d / drink)
                   :ARG4 (y / you)))
       :ARG1 (b2 / be-located-at-91
             :ARG1 ii
             :ARG2 (h / here)))

# ::id tatoeba_eng.95
# ::snt I think I know what happened to Tom .
(t / think-01
       :ARG0 (ii / i)
       :ARG1 (k / know-01
             :ARG0 ii
             :ARG1 (e / event
                   :topic (p / person
                         :name (n / name
                               :op1 "Tom")))))

# ::id tatoeba_eng.96
# ::snt I think you know why I summoned you .
(t / think-01
       :ARG0 (ii / i)
       :ARG1 (k / know-01
             :ARG0 (y / you)
             :ARG1 (t2 / thing
                   :ARG0-of (c / cause-01
                         :ARG1 (s / summon-01
                               :ARG0 ii
                               :ARG1 y)))))

# ::id tatoeba_eng.97
# ::snt I want to know who ' s coming with us .
(w / want-01
       :ARG0 (ii / i)
       :ARG1 (k / know-01
             :ARG0 ii
             :ARG1 (p / person
                   :ARG1-of (c / come-01
                         :accompanier (w2 / we)))))

# ::id tatoeba_eng.98
# ::snt I ' d rather walk than wait for a bus .
(p / prefer-01
       :ARG0 (ii / i)
       :ARG1 (w / walk-01
             :ARG0 ii)
       :ARG2 (w2 / wait-01
             :ARG1 ii
             :ARG2 (b / bus)))

# ::id tatoeba_eng.99
# ::snt If you eat so much , you ' ll get sick .
(s / sick-05
       :ARG1 (y / you)
       :condition (e / eat-01
             :ARG0 y
             :ARG1-of (h / have-quant-91
                   :ARG2 (m / much)
                   :ARG3 (s2 / so))))

# ::id tatoeba_eng.100
# ::snt It ' s OK with me if it ' s OK with you .
(o / okay-04
       :ARG1 (ii / it)
       :ARG2 (ii2 / i)
       :condition (o2 / okay-04
             :ARG1 ii
             :ARG2 (y / you)))

# ::id tatoeba_eng.101
# ::snt My cat has a big , white , bushy tail .
(h / have-03
       :ARG0 (c / cat
             :poss (ii / i))
       :ARG1 (t / tail
             :mod (b / big)
             :ARG1-of (w / white-03)
             :mod (b2 / bushy)))

# ::id tatoeba_eng.102
# ::snt The play lasts two and a half hours .
(l / last-01
       :ARG1 (p / play-01)
       :ARG2 (t / temporal-quantity
             :quant 2.5
             :unit (h / hour)))

# ::id tatoeba_eng.103
# ::snt Tom had to explain the joke to Mary .
(o / obligate-01
       :ARG1 (p / person
             :name (n / name
                   :op1 "Tom"))
       :ARG2 (e / explain-01
             :ARG0 p
             :ARG1 (j / joke-01)
             :ARG2 (p2 / person
                   :name (n2 / name
                         :op1 "Mary"))))

# ::id tatoeba_eng.104
# ::snt Tom is the tallest boy in the class .
(h / have-degree-91
       :ARG1 (b / boy
             :name (n / name
                   :op1 "Tom"))
       :ARG2 (t / tall)
       :ARG3 (m / most)
       :ARG5 (c / class))

# ::id tatoeba_eng.105
# ::snt Tom was in his truck the whole time .
(b / be-located-at-91
       :ARG1 (p / person
             :name (n / name
                   :op1 "Tom"))
       :ARG2 (t / truck
             :poss p)
       :duration (t2 / time
             :mod (w / whole)))

# ::id tatoeba_eng.106
# ::snt We only have a few hours until dark .
(h / have-03
       :ARG0 (w / we)
       :ARG1 (f / few
             :op1 (t / temporal-quantity
                   :quant 1
                   :unit (h2 / hour))
             :mod (o / only))
       :time (u / until
             :op1 (d / darken-01)))

# ::id tatoeba_eng.107
# ::snt When I grow up , I want to be a king .
(w / want-01
       :ARG0 (ii / i)
       :ARG1 (h / have-org-role-91
             :ARG0 ii
             :ARG2 (k / king))
       :time (g / grow-up-04
             :ARG1 ii))

# ::id tatoeba_eng.108
# ::snt You can use my computer if you want .
(p / possible-01
       :ARG1 (u / use-01
             :ARG0 (y / you)
             :ARG1 (c / computer
                   :poss (ii / i)))
       :condition (w / want-01
             :ARG0 y
             :ARG1 u))

# ::id tatoeba_eng.109
# ::snt Can you go around the world in a day ?
(p / possible-01
       :ARG1 (g / go-02
             :ARG0 (y / you)
             :ARG1 (a / around
                   :op1 (w / world))
             :duration (t / temporal-quantity
                   :quant 1
                   :unit (d / day)))
       :polarity (a2 / amr-unknown))

# ::id tatoeba_eng.110
# ::snt Do you prefer white wine or red wine ?
(p / prefer-01
       :ARG0 (y / you)
       :ARG1 (a / amr-choice
             :op1 (w / wine
                   :ARG1-of (w2 / white-02))
             :op2 (w3 / wine
                   :ARG1-of (r / red-02))))

# ::id tatoeba_eng.111
# ::snt He is absorbed in the study of Latin .
(a / absorb-01
       :ARG0 (s / study-01
             :ARG0 (h / he)
             :ARG1 (l / language
                   :name (n / name
                         :op1 "Latin")))
       :ARG1 h)

# ::id tatoeba_eng.112
# ::snt I can ' t help you right now . I ' m busy .
(m / multi-sentence
       :snt1 (p / possible-01
             :polarity -
             :ARG1 (h / help-01
                   :ARG0 (ii / i)
                   :ARG1 (y / you)
                   :time (n / now
                         :mod (r / right))))
       :snt2 (b / busy-01
             :ARG1 (ii2 / i)))

# ::id tatoeba_eng.113
# ::snt I have lot of work to do before then .
(o / obligate-01
       :ARG2 (w / work-01
             :ARG0 (ii / i)
             :quant (l / lot)
             :time (b / before
                   :op1 (t / then))))

# ::id tatoeba_eng.114
# ::snt I know how difficult this is for you .
(k / know-01
       :ARG0 (ii / i)
       :ARG1 (d / difficult
             :domain (t / this)
             :beneficiary (y / you)
             :degree (s / so)))

# ::id tatoeba_eng.115
# ::snt I think we ' ve got it figured out now .
(t / think-01
       :ARG0 (ii / i)
       :ARG1 (f / figure-out-05
             :ARG0 (w / we)
             :ARG1 (ii2 / it)
             :time (n / now)))

# ::id tatoeba_eng.116
# ::snt I think you should give Tom a chance .
(t / think-01
       :ARG0 (ii / i)
       :ARG1 (r / recommend-01
             :ARG1 (g / give-01
                   :ARG0 (y / you)
                   :ARG1 (c / chance-02
                         :ARG0 (p / person
                               :name (n / name
                                     :op1 "Tom")))
                   :ARG2 p)
             :ARG2 y))

# ::id tatoeba_eng.117
# ::snt I want to know who ' s staying with us .
(w / want-01
       :ARG0 (ii / i)
       :ARG1 (k / know-01
             :ARG0 ii
             :ARG1 (p / person
                   :ARG1-of (s / stay-01
                         :ARG3 (w2 / we)))))

# ::id tatoeba_eng.118
# ::snt I was the worst student in the class .
(h / have-degree-91
       :ARG1 (ii / i)
       :ARG2 (b / bad-03
             :ARG1 ii)
       :ARG3 (m / most)
       :ARG5 (p / person
             :ARG0-of (s / study-01)
             :location (c / class)))

# ::id tatoeba_eng.119
# ::snt I wish I could make up for lost time .
(w / wish-01
       :ARG0 (ii / i)
       :ARG1 (p / possible-01
             :ARG1 (m / make-up-16
                   :ARG0 ii
                   :ARG1 (t / time
                         :ARG1-of (l / lose-02
                               :ARG0 ii)))))

# ::id tatoeba_eng.120
# ::snt I wish I had listened to your advice .
(w / wish-01
       :ARG0 (ii / i)
       :ARG1 (l / listen-01
             :ARG0 ii
             :ARG1 (a / advise-01
                   :ARG0 (y / you)
                   :ARG1 ii)))

# ::id tatoeba_eng.121
# ::snt I would rather have a cat than a dog .
(p / prefer-01
       :ARG0 (ii / i)
       :ARG1 (h / have-03
             :ARG0 ii
             :ARG1 (c / cat))
       :ARG2 (h2 / have-03
             :ARG0 ii
             :ARG1 (d / dog)))

# ::id tatoeba_eng.122
# ::snt I ' ll do everything you tell me to do .
(d / do-02
       :ARG0 (ii / i)
       :ARG1 (e / everything
             :ARG1-of (d2 / do-02
                   :ARG0 ii
                   :ARG1-of (t / tell-01
                         :ARG0 (y / you)
                         :ARG2 ii))))

# ::id tatoeba_eng.123
# ::snt I ' m glad to hear that Tom didn ' t win .
(g / glad-02
       :ARG0 (h / hear-01
             :ARG0 (ii / i)
             :ARG1 (w / win-01
                   :polarity -
                   :ARG0 (p / person
                         :name (n / name
                               :op1 "Tom"))))
       :ARG1 ii)

# ::id tatoeba_eng.124
# ::snt I ' m not stupid . I ' m just bad at math .
(m / multi-sentence
       :snt1 (s / stupid
             :polarity -
             :domain (ii / i))
       :snt2 (b / bad-02
             :ARG1 (ii2 / i)
             :ARG2 (m2 / mathematics)
             :mod (j / just)))

# ::id tatoeba_eng.125
# ::snt I ' m very happy Tom and Mary are safe .
(h / happy-01
       :ARG0 (s / safe-01
             :ARG1 (a / and
                   :op1 (p / person
                         :name (n / name
                               :op1 "Tom"))
                   :op2 (p2 / person
                         :name (n2 / name
                               :op1 "Mary"))))
       :ARG1 (ii / i)
       :degree (v / very))

# ::id tatoeba_eng.126
# ::snt Is there a bus that goes to the mall ?
(b / bus
       :polarity (a / amr-unknown)
       :ARG0-of (g / go-02
             :ARG4 (m / mall)))

# ::id tatoeba_eng.127
# ::snt It was me who gave Tom that umbrella .
(g / give-01
       :ARG0 (ii / i)
       :ARG1 (u / umbrella
             :mod (t / that))
       :ARG2 (p / person
             :name (n / name
                   :op1 "Tom")))

# ::id tatoeba_eng.128
# ::snt No one knows how to fix this problem .
(k / know-01
       :ARG0 (n / no-one)
       :ARG1 (t / thing
             :manner-of (f / fix-02
                   :ARG0 n
                   :ARG1 (p / problem
                         :mod (t2 / this)))))

# ::id tatoeba_eng.129
# ::snt On a clear day , you can see Mt . Fuji .
(p / possible-01
       :ARG1 (s / see-01
             :ARG0 (y / you)
             :ARG1 (m / mountain
                   :name (n / name
                         :op1 "Mt."
                         :op2 "Fuji")))
       :time (d / day
             :ARG1-of (c / clear-08)))

# ::id tatoeba_eng.130
# ::snt The dog was in a box under the table .
(b / be-located-at-91
       :ARG1 (d / dog)
       :ARG2 (b2 / box
             :location (u / under
                   :op1 (t / table))))

# ::id tatoeba_eng.131
# ::snt There sure is a lot of traffic today .
(t / traffic
       :quant (l / lot)
       :time (t2 / today)
       :ARG1-of (s / sure-02))

# ::id tatoeba_eng.132
# ::snt They have lived here for a long time .
(l / live-01
       :ARG0 (t / they)
       :location (h / here)
       :ARG1-of (l2 / long-03))

# ::id tatoeba_eng.133
# ::snt This old car is yours if you want it .
(h / have-condition-91
       :ARG1 (b / belong-01
             :ARG0 (c / car
                   :mod (t / this)
                   :mod (o / old))
             :ARG1 (y / you))
       :ARG2 (w / want-01
             :ARG0 y
             :ARG1 c))

# ::id tatoeba_eng.134
# ::snt Tom had no idea that I would be here .
(h / have-03
       :polarity -
       :ARG0 (p / person
             :name (n / name
                   :op1 "Tom"))
       :ARG1 (ii / idea
             :topic (b / be-located-at-91
                   :ARG1 (ii2 / i)
                   :ARG2 (h2 / here))))

# ::id tatoeba_eng.135
# ::snt Tom hasn ' t yet told us what he wants .
(t / tell-01
       :polarity -
       :ARG0 (p / person
             :name (n / name
                   :op1 "Tom"))
       :ARG1 (t2 / thing
             :ARG1-of (w / want-01
                   :ARG0 p))
       :ARG2 (w2 / we)
       :time (y / yet))

# ::id tatoeba_eng.136
# ::snt Tom showed me a picture of his horse .
(s / show-01
       :ARG0 (p / person
             :name (n / name
                   :op1 "Tom"))
       :ARG1 (p2 / picture
             :topic (h / horse
                   :poss p))
       :ARG2 (ii / i))

# ::id tatoeba_eng.137
# ::snt We are very pleased to have her here .
(p / please-01
       :ARG0 (h / have-03
             :ARG0 (w / we)
             :ARG1 (s / she)
             :location (h2 / here))
       :ARG1 w
       :degree (v / very))

# ::id tatoeba_eng.138
# ::snt What do you think of Tom ' s nose ring ?
(t / think-01
       :ARG0 (y / you)
       :ARG1 (a / amr-unknown)
       :ARG2 (r / ring
             :mod (n / nose)
             :poss (p / person
                   :name (n2 / name
                         :op1 "Tom"))))

# ::id tatoeba_eng.139
# ::snt You are tall , but he is still taller .
(c / contrast-01
       :ARG1 (t / tall
             :domain (y / you))
       :ARG2 (h / have-degree-91
             :ARG1 (h2 / he)
             :ARG2 (t2 / tall)
             :ARG3 (m / more)
             :mod (s / still)))

# ::id tatoeba_eng.140
# ::snt You don ' t like Tom very much , do you ?
(d / dislike-01
       :ARG0 (y / you)
       :ARG1 (p / person
             :name (n / name
                   :op1 "Tom"))
       :degree (m / much
             :degree (v / very))
       :ARG1-of (r / request-confirmation-91
             :ARG2 y))

# ::id tatoeba_eng.141
# ::snt You still want me to come , don ' t you ?
(w / want-01
       :ARG0 (y / you)
       :ARG1 (c / come-01
             :ARG1 (ii / i))
       :mod (s / still)
       :ARG1-of (r / request-confirmation-91))

# ::id tatoeba_eng.142
# ::snt You ' re in luck . The plane is on time .
(m / multi-sentence
       :snt1 (l / luck
             :domain (y / you))
       :snt2 (o / on-time
             :domain (p / plane)))

# ::id tatoeba_eng.143
# ::snt All I know is that she left last week .
(k / know-01
       :ARG0 (ii / i)
       :ARG1 (l / leave-11
             :ARG0 (s / she)
             :time (w / week
                   :mod (l2 / last)))
       :mod (a / all))

# ::id tatoeba_eng.144
# ::snt Brush your teeth before you go to bed .
(b / brush-01
       :mode imperative
       :ARG0 (y / you
             :part (t / tooth))
       :ARG1 t
       :time (b2 / before
             :op1 (g / go-02
                   :ARG0 y
                   :ARG4 (b3 / bed))))

# ::id tatoeba_eng.145
# ::snt Could you tell me the way to the port ?
(p / possible-01
       :polarity (a / amr-unknown)
       :ARG1 (t / tell-01
             :ARG0 (y / you)
             :ARG1 (w / way
                   :direction (p2 / port))
             :ARG2 (ii / i)))

# ::id tatoeba_eng.146
# ::snt Do you have much snow in your country ?
(h / have-03
       :ARG0 (y / you)
       :ARG1 (s / snow
             :quant (m / much))
       :location (c / country
             :poss y)
       :polarity (a / amr-unknown))

# ::id tatoeba_eng.147
# ::snt Do you think anybody else is on board ?
(t / think-01
       :polarity (a / amr-unknown)
       :ARG0 (y / you)
       :ARG1 (b / board-01
             :ARG0 (a2 / anybody
                   :mod (e / else))))

# ::id tatoeba_eng.148
# ::snt He weighs 10 kilograms more than I do .
(w / weigh-01
       :ARG1 (h / he)
       :ARG1-of (h2 / have-quant-91
             :ARG3 (m / more
                   :quant (m2 / mass-quantity
                         :quant 10
                         :unit (k / kilogram)))
             :ARG4 (w2 / weigh-01
                   :ARG1 (ii / i))))

# ::id tatoeba_eng.149
# ::snt I called and pretended that I was Tom .
(a / and
       :op1 (c / call-02
             :ARG0 (ii / i))
       :op2 (p / pretend-01
             :ARG0 ii
             :ARG1 (p2 / person
                   :name (n / name
                         :op1 "Tom")
                   :domain ii)))

# ::id tatoeba_eng.150
# ::snt I can ' t recall her name at the moment .
(p / possible-01
       :polarity -
       :ARG1 (r / recall-02
             :ARG0 (ii / i)
             :ARG1 (n / name
                   :poss (s / she))
             :time (m / moment)))

# ::id tatoeba_eng.151
# ::snt I don ' t have to wear glasses any more .
(o / obligate-01
       :polarity -
       :ARG1 (ii / i)
       :ARG2 (w / wear-01
             :ARG0 ii
             :ARG1 (g / glasses))
       :time (a / anymore))

# ::id tatoeba_eng.152
# ::snt I don ' t want to live in a big mansion .
(w / want-01
       :polarity -
       :ARG0 (ii / i)
       :ARG1 (l / live-01
             :ARG0 ii
             :location (m / mansion
                   :mod (b / big))))

# ::id tatoeba_eng.153
# ::snt I have to speak French more often now .
(o / obligate-01
       :ARG2 (s / speak-01
             :ARG0 (ii / i)
             :ARG3 (l / language
                   :name (n / name
                         :op1 "French"))
             :frequency (o2 / often
                   :ARG2-of (h / have-degree-91
                         :ARG1 s
                         :ARG3 (m / more))))
       :time (n2 / now))

# ::id tatoeba_eng.154
# ::snt I need a little help with my homework .
(n / need-01
       :ARG0 (ii / i)
       :ARG1 (h / help-01
             :ARG1 (h2 / homework
                   :poss ii)
             :ARG2 ii
             :quant (l / little)))

# ::id tatoeba_eng.155
# ::snt I told them to send me another ticket .
(t / tell-01
       :ARG0 (ii / i)
       :ARG1 (s / send-01
             :ARG0 (t2 / they)
             :ARG1 (t3 / ticket
                   :mod (a / another))
             :ARG2 ii)
       :ARG2 t2)

# ::id tatoeba_eng.156
# ::snt I wonder if Tom will be busy tomorrow .
(w / wonder-01
       :ARG0 (ii / i)
       :ARG1 (t / truth-value
             :polarity-of (b / busy-01
                   :ARG1 (p / person
                         :name (n / name
                               :op1 "Tom"))
                   :time (t2 / tomorrow))))

# ::id tatoeba_eng.157
# ::snt I ' m really sorry that I told you that .
(s / sorry-01
       :ARG1 (ii / i)
       :ARG2 (t / tell-01
             :ARG0 ii
             :ARG1 (t2 / that)
             :ARG2 (y / you))
       :degree (r / really))

# ::id tatoeba_eng.158
# ::snt I ' ve been asked to give you a message .
(a / ask-02
       :ARG1 (g / give-01
             :ARG0 (ii / i)
             :ARG1 (m / message)
             :ARG2 (y / you))
       :ARG2 ii)

# ::id tatoeba_eng.159
# ::snt Our hens laid a lot of eggs yesterday .
(l / lay-01
       :ARG0 (h / hen
             :poss (w / we))
       :ARG1 (e / egg
             :quant (l2 / lot))
       :time (y / yesterday))

# ::id tatoeba_eng.160
# ::snt Tell me again how much money you have .
(t / tell-01
       :mode imperative
       :ARG0 (y / you)
       :ARG1 (m / monetary-quantity
             :quant-of (m2 / money
                   :ARG1-of (h / have-03
                         :ARG0 y)))
       :ARG2 (ii / i)
       :mod (a / again))

# ::id tatoeba_eng.161
# ::snt The new term starts in April in Japan .
(s / start-01
       :ARG1 (t / term
             :ARG1-of (n / new-01))
       :time (d / date-entity
             :month 4)
       :location (c / country
             :name (n2 / name
                   :op1 "Japan")))

# ::id tatoeba_eng.162
# ::snt The town is famous for its hot spring .
(f / fame-01
       :ARG1 (t / town)
       :ARG2 (s / spring
             :ARG1-of (h / hot-05)
             :location t))

# ::id tatoeba_eng.163
# ::snt They say that she was born in Germany .
(s / say-01
       :ARG0 (t / they)
       :ARG1 (b / bear-02
             :ARG1 (s2 / she)
             :location (c / country
                   :name (n / name
                         :op1 "Germany"))))

# ::id tatoeba_eng.164
# ::snt Tom drinks three cups of coffee a day .
(d / drink-01
       :ARG0 (p / person
             :name (n / name
                   :op1 "Tom"))
       :ARG1 (c / coffee
             :quant (v / volume-quantity
                   :quant 3
                   :unit (c2 / cup))
             :ARG1-of (r / rate-entity-91
                   :ARG2 (t / temporal-quantity
                         :quant 1
                         :unit (d2 / day)))))

# ::id tatoeba_eng.165
# ::snt Tom has found a house he wants to buy .
(f / find-01
       :ARG0 (p / person
             :name (n / name
                   :op1 "Tom"))
       :ARG1 (h / house
             :ARG1-of (b / buy-01
                   :ARG0 p
                   :ARG1-of (w / want-01
                         :ARG0 p))))

# ::id tatoeba_eng.166
# ::snt Tom plans to be in Boston next Monday .
(p / plan-01
       :ARG0 (p2 / person
             :name (n / name
                   :op1 "Tom"))
       :ARG1 (b / be-located-at-91
             :ARG1 p2
             :ARG2 (c / city
                   :name (n2 / name
                         :op1 "Boston"))
             :time (d / date-entity
                   :weekday (m / monday)
                   :mod (n3 / next))))

# ::id tatoeba_eng.167
# ::snt Tom tried to get into the locked room .
(t / try-01
       :ARG0 (p / person
             :name (n / name
                   :op1 "Tom"))
       :ARG1 (g / get-05
             :ARG1 p
             :ARG2 (r / room
                   :ARG1-of (l / lock-01))))

# ::id tatoeba_eng.168
# ::snt Tom works out in a gym near his house .
(w / work-out-03
       :ARG0 (p / person
             :name (n / name
                   :op1 "Tom"))
       :location (g / gym
             :ARG1-of (n2 / near-02
                   :ARG2 (h / house
                         :poss p))))

# ::id tatoeba_eng.169
# ::snt We have more in common than I thought .
(h / have-degree-91
       :ARG1 (w / we)
       :ARG2 (c / common-00
             :ARG1 w)
       :ARG3 (m / more)
       :ARG4 (t / thing
             :ARG1-of (t2 / think-01
                   :ARG0 (ii / i))))

# ::id tatoeba_eng.170
# ::snt Were you in Boston with Tom last week ?
(b / be-located-at-91
       :ARG1 (y / you)
       :ARG2 (c / city
             :name (n / name
                   :op1 "Boston"))
       :accompanier (p / person
             :name (n2 / name
                   :op1 "Tom"))
       :polarity (a / amr-unknown)
       :time (w / week
             :mod (l / last)))

# ::id tatoeba_eng.171
# ::snt What is it you really want to tell me ?
(w / want-01
       :ARG0 (y / you)
       :ARG1 (t / tell-01
             :ARG0 y
             :ARG1 (a / amr-unknown)
             :ARG2 (ii / i))
       :ARG1-of (r / real-04))

# ::id tatoeba_eng.172
# ::snt When Dad came home , I was watching TV .
(w / watch-01
       :ARG0 (ii / i)
       :ARG1 (t / television)
       :time (c / come-01
             :ARG1 (p / person
                   :ARG0-of (h / have-rel-role-91
                         :ARG1 ii
                         :ARG2 (d / dad)))
             :ARG4 (h2 / home)))

# ::id tatoeba_eng.173
# ::snt Why are you crying ? It ' s just a movie !
(m / multi-sentence
       :snt1 (c / cause-01
             :ARG0 (a / amr-unknown)
             :ARG1 (c2 / cry-02
                   :ARG0 (y / you)))
       :snt2 (m2 / movie
             :mod (j / just)
             :domain (ii / it)))

# ::id tatoeba_eng.174
# ::snt You don ' t have to do that now , do you ?
(o / obligate-01
       :polarity -
       :ARG1 (y / you)
       :ARG2 (d / do-02
             :ARG0 y
             :ARG1 (t / that)
             :time (n / now))
       :ARG1-of (r / request-confirmation-91))

# ::id tatoeba_eng.175
# ::snt You think it was a mistake , don ' t you ?
(t / think-01
       :ARG0 (y / you)
       :ARG1 (m / mistake-02
             :ARG1 (ii / it))
       :ARG1-of (r / request-confirmation-91))

# ::id tatoeba_eng.176
# ::snt You ' ve got to walk before you can run .
(o / obligate-01
       :ARG1 (y / you)
       :ARG2 (w / walk-01
             :ARG0 y
             :time (b / before
                   :op1 (p / possible-01
                         :ARG1 (r / run-02
                               :ARG0 y)))))

# ::id tatoeba_eng.177
# ::snt Are all of your sisters older than you ?
(h / have-degree-91
       :ARG1 (p / person
             :ARG0-of (h2 / have-rel-role-91
                   :ARG1 (y / you)
                   :ARG2 (s / sister))
             :mod (a / all))
       :ARG2 (o / old)
       :ARG3 (m / more)
       :ARG4 y
       :polarity (a2 / amr-unknown))

# ::id tatoeba_eng.178
# ::snt Could I talk to you alone for a second ?
(p / possible-01
       :polarity (a / amr-unknown)
       :ARG1 (t / talk-01
             :ARG0 (ii / i)
             :ARG2 (y / you)
             :mod (a2 / alone)
             :duration (t2 / temporal-quantity
                   :quant 1
                   :unit (s / second))))

# ::id tatoeba_eng.179
# ::snt Due to bad weather , the plane was late .
(l / late-02
       :ARG1 (p / plane)
       :ARG1-of (c / cause-01
             :ARG0 (w / weather
                   :ARG1-of (b / bad-07))))

# ::id tatoeba_eng.180
# ::snt He carved a Buddhist image out of wood .
(c / carve-01
       :ARG0 (h / he)
       :ARG1 (ii / image
             :mod (r / religious-group
                   :name (n / name
                         :op1 "Buddhist")))
       :ARG2 (w / wood))

# ::id tatoeba_eng.181
# ::snt He wonders if you are afraid of snakes .
(w / wonder-01
       :ARG0 (h / he)
       :ARG1 (t / truth-value
             :polarity-of (f / fear-01
                   :ARG0 (y / you)
                   :ARG1 (s / snake))))

# ::id tatoeba_eng.182
# ::snt How far is it to the library from here ?
(f / far
       :extent (a / amr-unknown)
       :direction (l / library)
       :source (h / here))

# ::id tatoeba_eng.183
# ::snt I am Finnish , but I also speak Swedish .
(c / contrast-01
       :ARG1 (p / person
             :domain (ii / i)
             :mod (c2 / country
                   :name (n / name
                         :op1 "Finland")))
       :ARG2 (s / speak-01
             :ARG0 ii
             :ARG3 (l / language
                   :name (n2 / name
                         :op1 "Swedish"))
             :mod (a / also)))

# ::id tatoeba_eng.184
# ::snt I came to this country three years ago .
(c / come-01
       :ARG1 (ii / i)
       :ARG4 (c2 / country
             :mod (t / this))
       :time (b / before
             :op1 (n / now)
             :quant (t2 / temporal-quantity
                   :quant 3
                   :unit (y / year))))

# ::id tatoeba_eng.185
# ::snt I gave a birthday present to my mother .
(g / give-01
       :ARG0 (ii / i)
       :ARG1 (p / present
             :mod (b / birthday))
       :ARG2 (p2 / person
             :ARG0-of (h / have-rel-role-91
                   :ARG1 ii
                   :ARG2 (m / mother))))

# ::id tatoeba_eng.186
# ::snt I go to school because I want to learn .
(c / cause-01
       :ARG0 (w / want-01
             :ARG0 (ii / i)
             :ARG1 (l / learn-01
                   :ARG0 ii))
       :ARG1 (g / go-02
             :ARG0 ii
             :ARG4 (s / school)))

# ::id tatoeba_eng.187
# ::snt I had my tonsils removed two weeks ago .
(r / remove-01
       :ARG1 (t / tonsil
             :part-of (ii / i))
       :time (b / before
             :op1 (n / now)
             :quant (t2 / temporal-quantity
                   :quant 2
                   :unit (w / week))))

# ::id tatoeba_eng.188
# ::snt I hope I don ' t have to use this pistol .
(h / hope-01
       :ARG0 (ii / i)
       :ARG1 (o / obligate-01
             :polarity -
             :ARG1 ii
             :ARG2 (u / use-01
                   :ARG0 ii
                   :ARG1 (p / pistol
                         :mod (t / this)))))

# ::id tatoeba_eng.189
# ::snt I lived in Boston before I got married .
(l / live-01
       :ARG0 (ii / i)
       :location (c / city
             :name (n / name
                   :op1 "Boston"))
       :time (b / before
             :op1 (m / marry-01
                   :ARG1 ii)))

# ::id tatoeba_eng.190
# ::snt I wish that I could give you something .
(w / wish-01
       :ARG0 (ii / i)
       :ARG1 (p / possible-01
             :ARG1 (g / give-01
                   :ARG0 ii
                   :ARG1 (s / something)
                   :ARG2 (y / you))))

# ::id tatoeba_eng.191
# ::snt I ' d be happy to take care of your baby .
(h / happy-01
       :ARG0 (c / care-03
             :ARG0 (ii / i)
             :ARG1 (b / baby
                   :ARG0-of (h2 / have-rel-role-91
                         :ARG1 (y / you)
                         :ARG2 (c2 / child))))
       :ARG1 ii)

# ::id tatoeba_eng.192
# ::snt I ' m proud to be a part of this project .
(p / pride-01
       :ARG0 (ii / i)
       :ARG1 (h / have-part-91
             :ARG1 (p2 / project
                   :mod (t / this))
             :ARG2 ii))

# ::id tatoeba_eng.193
# ::snt If you hear the alarm , walk , don ' t run .
(a / and
       :op1 (w / walk-01
             :mode imperative
             :ARG0 (y / you))
       :op2 (r / run-02
             :polarity -
             :mode imperative
             :ARG0 y)
       :condition (h / hear-01
             :ARG0 y
             :ARG1 (a2 / alarm-01)))

# ::id tatoeba_eng.194
# ::snt It looks like today will be a long day .
(l / look-02
       :ARG1 (t / today
             :domain (d / day
                   :ARG1-of (l2 / long-03))))

# ::id tatoeba_eng.195
# ::snt January is the first month of the year .
(m / month
       :ord (o / ordinal-entity
             :value 1)
       :part-of (y / year)
       :domain (d / date-entity
             :month 1))

# ::id tatoeba_eng.196
# ::snt My sister is not a high school student .
(p / person
       :ARG0-of (h / have-rel-role-91
             :ARG1 (ii / i)
             :ARG2 (s / sister))
       :ARG0-of (s2 / study-01
             :polarity -
             :location (h2 / high-school)))

# ::id tatoeba_eng.197
# ::snt Tell me the reason why they are absent .
(t / tell-01
       :mode imperative
       :ARG0 (y / you)
       :ARG1 (t2 / thing
             :ARG0-of (c / cause-01
                   :ARG1 (a / absent-01
                         :ARG1 (t3 / they))))
       :ARG2 (ii / i))

# ::id tatoeba_eng.198
# ::snt The boy and the man are drinking water .
(d / drink-01
       :ARG0 (a / and
             :op1 (b / boy)
             :op2 (m / man))
       :ARG1 (w / water))

# ::id tatoeba_eng.199
# ::snt The door was open , so we came right in .
(o / open-01
       :ARG1 (d / door)
       :ARG0-of (c / cause-01
             :ARG1 (c2 / come-01
                   :ARG1 (w / we)
                   :ARG4 (ii / inside)
                   :manner (r / right))))

# ::id tatoeba_eng.200
# ::snt The old lady walked slowly up the hill .
(w / walk-01
       :ARG0 (l / lady
             :mod (o / old))
       :ARG2 (u / up-03
             :ARG1 l
             :ARG2 (h / hill))
       :ARG1-of (s / slow-05))

# ::id tatoeba_eng.201
# ::snt There ' s nothing more you can do for me .
(p / possible-01
       :ARG1 (d / do-02
             :ARG0 (y / you)
             :ARG1 (n / nothing
                   :mod (m / more))
             :ARG2 (ii / i)))

# ::id tatoeba_eng.202
# ::snt This is the biggest hotel in this city .
(h / have-degree-91
       :ARG1 (h2 / hotel
             :mod (t / this))
       :ARG2 (b / big)
       :ARG3 (m / most)
       :ARG5 (c / city
             :mod (t2 / this)))

# ::id tatoeba_eng.203
# ::snt Tom and Mary swam in the ice - cold lake .
(s / swim-01
       :ARG0 (a / and
             :op1 (p / person
                   :name (n / name
                         :op1 "Tom"))
             :op2 (p2 / person
                   :name (n2 / name
                         :op1 "Mary")))
       :ARG1 (l / lake
             :ARG1-of (c / cold-01
                   :ARG0 (ii / ice))))

# ::id tatoeba_eng.204
# ::snt Tom said no one else wanted to do that .
(s / say-01
       :ARG0 (p / person
             :name (n / name
                   :op1 "Tom"))
       :ARG1 (w / want-01
             :ARG0 (n2 / no-one
                   :mod (e / else))
             :ARG1 (d / do-02
                   :ARG0 n2
                   :ARG1 (t / that))))

# ::id tatoeba_eng.205
# ::snt Tom thought he had a chance to survive .
(t / think-01
       :ARG0 (p / person
             :name (n / name
                   :op1 "Tom"))
       :ARG1 (c / chance-02
             :ARG0 p
             :ARG1 (s / survive-01
                   :ARG0 p)))

# ::id tatoeba_eng.206
# ::snt Tom waited until Mary was out of sight .
(w / wait-01
       :ARG1 (p / person
             :name (n / name
                   :op1 "Tom"))
       :time (u / until
             :op1 (o / out-06
                   :ARG1 (p2 / person
                         :name (n2 / name
                               :op1 "Mary"))
                   :ARG2 (s / sight-01))))

# ::id tatoeba_eng.207
# ::snt Tom , could you keep an eye on the kids ?
(s / say-01
       :ARG0 (ii / i)
       :ARG1 (p / possible-01
             :ARG1 (k / keep-02
                   :ARG0 (p2 / person
                         :name (n / name
                               :op1 "Tom"))
                   :ARG1 (h / have-eye-on-05
                         :ARG0 p2
                         :ARG1 (k2 / kid)))
             :polarity (a / amr-unknown))
       :ARG2 p2)

# ::id tatoeba_eng.208
# ::snt We were all in Boston at the same time .
(b / be-located-at-91
       :ARG1 (w / we
             :mod (a / all))
       :ARG2 (c / city
             :name (n / name
                   :op1 "Boston"))
       :time (s / same-01))

# ::id tatoeba_eng.209
# ::snt What time do you get up in the morning ?
(g / get-up-26
       :ARG1 (y / you)
       :time (d / date-entity
             :dayperiod (m / morning)
             :mod (a / amr-unknown)))

# ::id tatoeba_eng.210
# ::snt Where can I find the key to your heart ?
(p / possible-01
       :ARG1 (f / find-01
             :ARG0 (ii / i)
             :ARG1 (k / key-02
                   :ARG2 (h / heart
                         :part-of (y / you)))
             :location (a / amr-unknown)))

# ::id tatoeba_eng.211
# ::snt Who was it who wrote these two letters ?
(w / write-01
       :ARG0 (a / amr-unknown)
       :ARG1 (l / letter
             :quant 2
             :mod (t / this)))

# ::id tatoeba_eng.212
# ::snt You don ' t look very well . Are you sick ?
(m / multi-sentence
       :snt1 (l / look-02
             :polarity -
             :ARG0 (y / you)
             :ARG1 (w / well-09
                   :degree (v / very)))
       :snt2 (s / sick-05
             :polarity (a / amr-unknown)
             :ARG1 (y2 / you)))

# ::id tatoeba_eng.213
# ::snt " Can you play the guitar ? " " Yes , I can . "
(m / multi-sentence
       :snt1 (p / possible-01
             :polarity (a / amr-unknown)
             :ARG1 (p2 / play-11
                   :ARG0 (y / you)
                   :ARG2 (g / guitar)))
       :snt2 (p3 / possible-01
             :ARG1 p2
             :mod (y2 / yes)))

# ::id tatoeba_eng.214
# ::snt As far as I know , there is no such word .
(w / word
       :polarity -
       :mod (s / such)
       :concession (a / as-far-as
             :op1 (k / know-01
                   :ARG0 (ii / i))))

# ::id tatoeba_eng.215
# ::snt China is twenty times as large as Japan .
(h / have-degree-91
       :ARG1 (c / country
             :name (n / name
                   :op1 "China"))
       :ARG2 (l / large)
       :ARG3 (t / times
             :quant 20)
       :ARG4 (c2 / country
             :name (n2 / name
                   :op1 "Japan")))

# ::id tatoeba_eng.216
# ::snt Do you want me to take care of your dog ?
(w / want-01
       :polarity (a / amr-unknown)
       :ARG0 (y / you)
       :ARG1 (c / care-03
             :ARG0 (ii / i)
             :ARG1 (d / dog
                   :poss y)))

# ::id tatoeba_eng.217
# ::snt Excuse me , which way is the post office ?
(a / and
       :op1 (e / excuse-01
             :mode imperative
             :ARG0 (y / you)
             :ARG1 (ii / i))
       :op2 (w / way
             :mod (a2 / amr-unknown)
             :direction-of (c / company
                   :name (n / name
                         :op1 "Post"
                         :op2 "Office"))))

# ::id tatoeba_eng.218
# ::snt He did not intend to hurt your feelings .
(ii / intend-01
       :polarity -
       :ARG0 (h / he)
       :ARG1 (h2 / hurt-01
             :ARG0 h
             :ARG1 (f / feel-01
                   :ARG0 (y / you))))

# ::id tatoeba_eng.219
# ::snt He fell in love with her at first sight .
(f / fall-07
       :ARG1 (h / he)
       :ARG2 (s / she)
       :time (a / at-first-))

# ::id tatoeba_eng.220
# ::snt He is not a friend , but an acquaintance .
(c / contrast-01
       :ARG1 (h / have-rel-role-91
             :polarity -
             :ARG0 (h2 / he)
             :ARG2 (f / friend)
             :ARG2-of c)
       :ARG0 h2
       :ARG2 (a / acquaintance))

# ::id tatoeba_eng.221
# ::snt I am proud to be a part of this project .
(p / pride-01
       :ARG0 (ii / i)
       :ARG1 (h / have-part-91
             :ARG1 (p2 / project
                   :mod (t / this))
             :ARG2 ii))

# ::id tatoeba_eng.222
# ::snt I assumed Tom was working with you guys .
(a / assume-02
       :ARG0 (ii / i)
       :ARG1 (w / work-01
             :ARG0 (p / person
                   :name (n / name
                         :op1 "Tom"))
             :ARG3 (y / you
                   :mod (g / guy))))

# ::id tatoeba_eng.223
# ::snt I can ' t wait for you to meet my friends .
(w / wait-01
       :polarity -
       :ARG1 (ii / i)
       :ARG2 (m / meet-02
             :ARG0 (y / you)
             :ARG1 (p / person
                   :ARG0-of (h / have-rel-role-91
                         :ARG1 ii
                         :ARG2 (f / friend)))))

# ::id tatoeba_eng.224
# ::snt I don ' t have much time , could you hurry ?
(m / multi-sentence
       :snt1 (h / have-03
             :polarity -
             :ARG0 (ii / i)
             :ARG1 (t / time
                   :quant (m2 / much)))
       :snt2 (p / possible-01
             :mode imperative
             :polite +
             :ARG1 (h2 / hurry-01
                   :ARG1 (y / you))))

# ::id tatoeba_eng.225
# ::snt I have an idea I ' d like you to consider .
(h / have-03
       :ARG0 (ii / i)
       :ARG1 (ii2 / idea
             :ARG1-of (c / consider-02
                   :ARG0 (y / you)
                   :ARG1-of (l / like-02
                         :ARG0 ii))))

# ::id tatoeba_eng.226
# ::snt I just got off the phone with my lawyer .
(g / get-off-23
       :ARG1 (ii / i)
       :ARG2 (p / phone-01
             :ARG0 ii
             :ARG1 (p2 / person
                   :ARG0-of (h / have-rel-role-91
                         :ARG1 ii
                         :ARG2 (l / lawyer))))
       :time (j / just))

# ::id tatoeba_eng.227
# ::snt I know that Tom is a very good customer .
(k / know-01
       :ARG0 (ii / i)
       :ARG1 (c / customer
             :ARG1-of (g / good-02
                   :degree (v / very))
             :domain (p / person
                   :name (n / name
                         :op1 "Tom"))))

# ::id tatoeba_eng.228
# ::snt I shouldn ' t have to ever come back here .
(r / recommend-01
       :polarity -
       :ARG1 (o / obligate-01
             :ARG1 (ii / i)
             :ARG2 (c / come-01
                   :ARG1 ii
                   :ARG4 (h / here)
                   :direction (b / back)
                   :time (e / ever))))

# ::id tatoeba_eng.229
# ::snt I was hoping we could eat early tonight .
(h / hope-01
       :ARG0 (ii / i)
       :ARG1 (p / possible-01
             :ARG1 (e / eat-01
                   :ARG0 (w / we)
                   :time (e2 / early
                         :op1 (d / date-entity
                               :dayperiod (n / night)
                               :mod (t / today))))))

# ::id tatoeba_eng.230
# ::snt I wish I could go to the party with you .
(w / wish-01
       :ARG0 (ii / i)
       :ARG1 (p / possible-01
             :ARG1 (g / go-02
                   :ARG0 ii
                   :ARG4 (p2 / party)
                   :accompanier (y / you))))

# ::id tatoeba_eng.231
# ::snt I wish you had come to see me yesterday .
(w / wish-01
       :ARG0 (ii / i)
       :ARG1 (c / come-01
             :ARG1 (y / you)
             :purpose (s / see-01
                   :ARG0 y
                   :ARG1 ii)
             :time (y2 / yesterday)))

# ::id tatoeba_eng.232
# ::snt I ' ve wanted to meet you for a long time .
(w / want-01
       :ARG0 (ii / i)
       :ARG1 (m / meet-03
             :ARG0 ii
             :ARG1 (y / you))
       :ARG1-of (l / long-03))

# ::id tatoeba_eng.233
# ::snt Is it true that Mary killed her husband ?
(t / true-01
       :ARG1 (k / kill-01
             :ARG0 (p / person
                   :name (n / name
                         :op1 "Mary"))
             :ARG1 (p2 / person
                   :ARG0-of (h / have-rel-role-91
                         :ARG1 p
                         :ARG2 (h2 / husband))))
       :polarity (a / amr-unknown))

# ::id tatoeba_eng.234
# ::snt Last year , he spent three months at sea .
(s / spend-02
       :ARG0 (h / he)
       :ARG1 (t / temporal-quantity
             :quant 3
             :unit (m / month))
       :ARG2 (s2 / sea)
       :time (y / year
             :mod (l / last)))

# ::id tatoeba_eng.235
# ::snt My father can swim , but my mother can ' t .
(c / contrast-01
       :ARG1 (p / possible-01
             :ARG1 (s / swim-01
                   :ARG0 (p2 / person
                         :ARG0-of (h / have-rel-role-91
                               :ARG1 (ii / i)
                               :ARG2 (f / father)))))
       :ARG2 (p3 / possible-01
             :polarity -
             :ARG1 (s2 / swim-01
                   :ARG0 (p4 / person
                         :ARG0-of (h2 / have-rel-role-91
                               :ARG1 ii
                               :ARG2 (m / mother))))))

# ::id tatoeba_eng.236
# ::snt She got married at the age of seventeen .
(m / marry-01
       :ARG1 (s / she)
       :time (a / age-01
             :ARG1 s
             :ARG2 (t / temporal-quantity
                   :quant 17
                   :unit (y / year))))

# ::id tatoeba_eng.237
# ::snt Show me the pictures you took in Boston .
(s / show-01
       :mode imperative
       :ARG0 (y / you)
       :ARG1 (p / picture
             :ARG1-of (t / take-01
                   :ARG0 y
                   :location (c / city
                         :name (n / name
                               :op1 "Boston"))))
       :ARG2 (ii / i))

# ::id tatoeba_eng.238
# ::snt There is a car in front of the building .
(c / car
       :location (ii / in-front-of
             :op1 (b / building)))

# ::id tatoeba_eng.239
# ::snt They ' re both in love with the same girl .
(l / love-01
       :ARG0 (t / they
             :mod (b / both))
       :ARG1 (g / girl
             :ARG1-of (s / same-01)))

# ::id tatoeba_eng.240
# ::snt Tom hates Mary as much as she hates him .
(h / have-degree-91
       :ARG1 (h2 / hate-01
             :ARG0 (p / person
                   :name (n / name
                         :op1 "Tom"))
             :ARG1 (p2 / person
                   :name (n2 / name
                         :op1 "Mary")))
       :ARG2 (m / much)
       :ARG3 (e / equal)
       :ARG4 (h3 / hate-01
             :ARG0 p2
             :ARG1 p))

# ::id tatoeba_eng.241
# ::snt Tom says that he wants to buy a new car .
(s / say-01
       :ARG0 (p / person
             :name (n / name
                   :op1 "Tom"))
       :ARG1 (w / want-01
             :ARG0 p
             :ARG1 (b / buy-01
                   :ARG0 p
                   :ARG1 (c / car
                         :ARG1-of (n2 / new-01)))))

# ::id tatoeba_eng.242
# ::snt Tom washes clothes at least once a week .
(w / wash-01
       :ARG0 (p / person
             :name (n / name
                   :op1 "Tom"))
       :ARG1 (c / clothes)
       :frequency (r / rate-entity-91
             :ARG1 (a / at-least
                   :op1 1)
             :ARG2 (t / temporal-quantity
                   :quant 1
                   :unit (w2 / week))))

# ::id tatoeba_eng.243
# ::snt Tom ' s taste in music is similar to mine .
(r / resemble-01
       :ARG1 (t / taste
             :topic (m / music)
             :poss (p / person
                   :name (n / name
                         :op1 "Tom")))
       :ARG2 (t2 / taste
             :topic (m2 / music)
             :poss (ii / i)))

# ::id tatoeba_eng.244
# ::snt What is the maximum dosage for an adult ?
(d / dosage
       :quant (m / maximum
             :mod (a / amr-unknown))
       :beneficiary (a2 / adult))

# ::id tatoeba_eng.245
# ::snt Why did you think Tom liked heavy metal ?
(c / cause-01
       :ARG0 (a / amr-unknown)
       :ARG1 (t / think-01
             :ARG0 (y / you)
             :ARG1 (l / like-01
                   :ARG0 (p / person
                         :name (n / name
                               :op1 "Tom"))
                   :ARG1 (m / metal
                         :mod (h / heavy)))))

# ::id tatoeba_eng.246
# ::snt You don ' t mind if I leave early , do you ?
(m / mind-01
       :polarity -
       :ARG0 (y / you)
       :ARG1 (l / leave-11
             :ARG0 (ii / i)
             :time (e / early))
       :ARG1-of (r / request-confirmation-91))

# ::id tatoeba_eng.247
# ::snt Could you let me know when Tom gets here ?
(l / let-know-07
       :ARG0 (y / you)
       :ARG1 (ii / i)
       :ARG2 (t / time
             :time-of (g / get-05
                   :ARG1 (p / person
                         :name (n / name
                               :op1 "Tom"))
                   :ARG2 (h / here)))
       :polite +
       :mode imperative
       :ARG1-of (p2 / possible-01))

# ::id tatoeba_eng.248
# ::snt Dinner will be served on board the plane .
(s / serve-01
       :ARG1 (d / dinner)
       :location (b / board-01
             :ARG1 (p / plane)))

# ::id tatoeba_eng.249
# ::snt Do you really want to stay young forever ?
(w / want-01
       :polarity (a / amr-unknown)
       :ARG0 (y / you)
       :ARG1 (s / stay-01
             :ARG1 y
             :ARG3 (y2 / young)
             :duration (f / forever))
       :ARG1-of (r / real-04))

# ::id tatoeba_eng.250
# ::snt Don ' t be silly . You know that I love you .
(m / multi-sentence
       :snt1 (s / silly
             :polarity -
             :mode imperative
             :domain (y / you))
       :snt2 (k / know-01
             :ARG0 (y2 / you)
             :ARG1 (l / love-01
                   :ARG0 (ii / i)
                   :ARG1 y2)))

# ::id tatoeba_eng.251
# ::snt He kept us waiting for more than an hour .
(k / keep-02
       :ARG0 (h / he)
       :ARG1 (w / wait-01
             :ARG1 (w2 / we)
             :duration (m / more-than
                   :op1 (t / temporal-quantity
                         :quant 1
                         :unit (h2 / hour)))))

# ::id tatoeba_eng.252
# ::snt He made up for lost time by running fast .
(m / make-up-16
       :ARG0 (h / he)
       :ARG1 (t / time
             :ARG1-of (l / lose-02
                   :ARG0 h))
       :ARG2 (r / run-02
             :ARG0 h
             :ARG1-of (f / fast-02)))

# ::id tatoeba_eng.253
# ::snt How would you feel if your wife left you ?
(f / feel-01
       :ARG0 (y / you)
       :ARG1 (a / amr-unknown)
       :condition (l / leave-15
             :ARG0 (p / person
                   :ARG0-of (h / have-rel-role-91
                         :ARG1 y
                         :ARG2 (w / wife)))
             :ARG1 y))

# ::id tatoeba_eng.254
# ::snt I couldn ' t go out because it was raining .
(p / possible-01
       :polarity -
       :ARG1 (g / go-out-17
             :ARG0 (ii / i))
       :ARG1-of (c / cause-01
             :ARG0 (r / rain-01)))

# ::id tatoeba_eng.255
# ::snt I didn ' t like her at first , but now I do .
(c / contrast-01
       :ARG1 (d / dislike-01
             :ARG0 (ii / i)
             :ARG1 (s / she)
             :time (a / at-first))
       :ARG2 (d2 / dislike-01
             :ARG0 ii
             :ARG1 s
             :time (n / now)))

# ::id tatoeba_eng.256
# ::snt I don ' t know what kind of car Tom drives .
(k / know-01
       :polarity -
       :ARG0 (ii / i)
       :ARG1 (c / car
             :mod (k2 / kind)
             :ARG1-of (d / drive-01
                   :ARG0 (p / person
                         :name (n / name
                               :op1 "Tom")))))

# ::id tatoeba_eng.257
# ::snt I have to leave early to catch the train .
(o / obligate-01
       :ARG2 (l / leave-11
             :ARG0 (ii / i)
             :time (e / early)
             :purpose (c / catch-01
                   :ARG0 ii
                   :ARG1 (t / train))))

# ::id tatoeba_eng.258
# ::snt I haven ' t yet done what I was told to do .
(d / do-02
       :polarity -
       :ARG0 (ii / i)
       :ARG1 (t / thing
             :ARG1-of (d2 / do-02
                   :ARG0 ii
                   :ARG2-of (t2 / tell-01
                         :ARG1 ii)))
       :time (y / yet))

# ::id tatoeba_eng.259
# ::snt I need you to help me move this bookcase .
(n / need-01
       :ARG0 (ii / i)
       :ARG1 (h / help-01
             :ARG0 (y / you)
             :ARG1 (m / move-01
                   :ARG0 ii
                   :ARG1 (b / bookcase
                         :mod (t / this)))
             :ARG2 ii))

# ::id tatoeba_eng.260
# ::snt I plan to reply to his letter right away .
(p / plan-01
       :ARG0 (ii / i)
       :ARG1 (r / reply-01
             :ARG0 ii
             :ARG1 (l / letter
                   :poss (h / he))
             :time (r2 / right-away)))

# ::id tatoeba_eng.261
# ::snt I sometimes use scissors as a can opener .
(u / use-01
       :ARG0 (ii / i)
       :ARG1 (s / scissors)
       :ARG2 (o / open-01
             :ARG0 ii
             :ARG1 (c / can)
             :ARG2 s)
       :frequency (s2 / sometimes))

# ::id tatoeba_eng.262
# ::snt I told Tom that I wanted to go to Boston .
(t / tell-01
       :ARG0 (ii / i)
       :ARG1 (w / want-01
             :ARG0 ii
             :ARG1 (g / go-02
                   :ARG0 ii
                   :ARG4 (c / city
                         :name (n / name
                               :op1 "Boston"))))
       :ARG2 (p / person
             :name (n2 / name
                   :op1 "Tom")))

# ::id tatoeba_eng.263
# ::snt I used to play guitar in a band with Tom .
(p / play-11
       :ARG0 (ii / i)
       :ARG1 (g / guitar)
       :ARG2 (b / band
             :accompanier (p2 / person
                   :name (n / name
                         :op1 "Tom")))
       :time (u / use-03))

# ::id tatoeba_eng.264
# ::snt I was worried about my mistakes at first .
(w / worry-02
       :ARG0 (ii / i)
       :ARG1 (m / mistake-01
             :ARG0 ii)
       :time (a / at-first))

# ::id tatoeba_eng.265
# ::snt I wish I could live in a house that nice .
(w / wish-01
       :ARG0 (ii / i)
       :ARG1 (p / possible-01
             :ARG1 (l / live-01
                   :ARG0 ii
                   :location (h / house
                         :ARG1-of (n / nice-01
                               :degree (t / that))))))

# ::id tatoeba_eng.266
# ::snt I wish there was more variety in my work .
(w / wish-01
       :ARG0 (ii / i)
       :ARG1 (v / variety
             :location (w2 / work-01
                   :ARG0 ii)
             :quant (m / more)))

# ::id tatoeba_eng.267
# ::snt I wonder whether Tom is dangerous or not .
(w / wonder-01
       :ARG0 (ii / i)
       :ARG1 (t / truth-value
             :polarity-of (e / endanger-01
                   :ARG0 (p / person
                         :name (n / name
                               :op1 "Tom")))))

# ::id tatoeba_eng.268
# ::snt I ' d like a room facing the ocean instead .
(l / like-02
       :ARG0 (ii / i)
       :ARG1 (r / room
             :ARG0-of (f / face-01
                   :ARG1 (o / ocean)))
       :ARG1-of (ii2 / instead-of-91))

# ::id tatoeba_eng.269
# ::snt I ' ll call them tomorrow when I come back .
(c / call-02
       :ARG0 (ii / i)
       :ARG1 (t / they)
       :time (t2 / tomorrow)
       :time (c2 / come-01
             :ARG1 ii
             :ARG4 (b / back)))

# ::id tatoeba_eng.270
# ::snt I ' ve got my own problems to take care of .
(o / obligate-01
       :ARG2 (c / care-03
             :ARG0 (ii / i)
             :ARG1 (p / problem
                   :poss ii)))

# ::id tatoeba_eng.271
# ::snt Is there anything to drink in the fridge ?
(a / anything
       :polarity (a2 / amr-unknown)
       :ARG1-of (d / drink-01)
       :location (f / fridge))

# ::id tatoeba_eng.272
# ::snt It wasn ' t Tom who left the water running .
(l / leave-14
       :polarity -
       :ARG0 (p / person
             :name (n / name
                   :op1 "Tom"))
       :ARG1 (r / run-01
             :ARG0 p
             :ARG1 (w / water)))

# ::id tatoeba_eng.273
# ::snt It ' s not his place to tell me what to do .
(p / place
       :polarity -
       :poss (h / he)
       :domain (t / tell-01
             :ARG0 h
             :ARG1 (t2 / thing
                   :ARG1-of (d / do-02
                         :ARG0 (ii / i)))
             :ARG2 ii))

# ::id tatoeba_eng.274
# ::snt Let ' s sit down in the shade of that tree .
(s / sit-down-02
       :mode imperative
       :ARG1 (w / we)
       :ARG2 (s2 / shade-01
             :ARG0 (t / tree
                   :mod (t2 / that))))

# ::id tatoeba_eng.275
# ::snt Mary put her knitting aside and stood up .
(a / and
       :op1 (p / put-01
             :ARG0 (p2 / person
                   :name (n / name
                         :op1 "Mary"))
             :ARG1 (t / thing
                   :ARG1-of (k / knit-01
                         :ARG0 p2))
             :ARG2 (a2 / aside))
       :op2 (s / stand-up-07
             :ARG1 p2))

# ::id tatoeba_eng.276
# ::snt No one was ever able to solve the riddle .
(p / possible-01
       :ARG1 (s / solve-01
             :ARG0 (n / no-one)
             :ARG1 (r / riddle))
       :time (e / ever))

# ::id tatoeba_eng.277
# ::snt She was alone with her baby in the house .
(a / alone
       :domain (s / she
             :accompanier (p / person
                   :ARG0-of (h / have-rel-role-91
                         :ARG1 s
                         :ARG2 (b / baby))))
       :location (h2 / house))

# ::id tatoeba_eng.278
# ::snt Sooner or later , he will run out of luck .
(r / run-out-05
       :ARG1 (l / luck)
       :ARG2 (h / he)
       :time (e / eventual))

# ::id tatoeba_eng.279
# ::snt The boy tried to saw off the dead branch .
(t / try-01
       :ARG0 (b / boy)
       :ARG1 (s / saw-01
             :ARG0 b
             :ARG1 (b2 / branch
                   :ARG1-of (d / die-01))
             :mod (o / off)))

# ::id tatoeba_eng.280
# ::snt The old man was not as mean as he looked .
(h / have-degree-91
       :polarity -
       :ARG1 (m / man
             :mod (o / old))
       :ARG2 (m2 / mean-04
             :ARG0 m)
       :ARG3 (e / equal)
       :ARG4 (l / look-02
             :ARG0 m))

# ::id tatoeba_eng.281
# ::snt They fought a fair battle with the enemy .
(f / fight-01
       :ARG0 (t / they)
       :ARG1 (e / enemy)
       :ARG1-of (f2 / fair-01))

# ::id tatoeba_eng.282
# ::snt Tom admitted that he had stolen the bike .
(a / admit-01
       :ARG0 (p / person
             :name (n / name
                   :op1 "Tom"))
       :ARG1 (s / steal-01
             :ARG0 p
             :ARG1 (b / bike)))

# ::id tatoeba_eng.283
# ::snt Tom isn ' t going to be at today ' s meeting .
(b / be-located-at-91
       :polarity -
       :ARG1 (p / person
             :name (n / name
                   :op1 "Tom"))
       :ARG2 (m / meet-03
             :time (t / today)))

# ::id tatoeba_eng.284
# ::snt Tom said that this movie was pretty good .
(s / say-01
       :ARG0 (p / person
             :name (n / name
                   :op1 "Tom"))
       :ARG1 (g / good-02
             :ARG1 (m / movie
                   :mod (t / this))
             :degree (p2 / pretty)))

# ::id tatoeba_eng.285
# ::snt Tom was sick and stayed home from school .
(a / and
       :op1 (s / sick-05
             :ARG1 (p / person
                   :name (n / name
                         :op1 "Tom")))
       :op2 (s2 / stay-01
             :ARG1 p
             :ARG3 (h / home)
             :source (s3 / school)))

# ::id tatoeba_eng.286
# ::snt What do you want to drink with your meal ?
(w / want-01
       :ARG0 (y / you)
       :ARG1 (d / drink-01
             :ARG0 y
             :ARG1 (a / amr-unknown)
             :accompanier (m / meal
                   :poss y)))

# ::id tatoeba_eng.287
# ::snt When the cat is away , the mice will play .
(p / play-01
       :ARG0 (m / mouse)
       :time (a / away
             :domain (c / cat)))

# ::id tatoeba_eng.288
# ::snt Whip the egg whites until they are stiff .
(w / whip-01
       :mode imperative
       :ARG0 (y / you)
       :ARG1 (w2 / white-03
             :ARG1 (e / egg))
       :time (u / until
             :op1 (s / stiff-02
                   :ARG1 e)))

# ::id tatoeba_eng.289
# ::snt You don ' t really plan to do that , do you ?
(p / plan-01
       :polarity -
       :ARG0 (y / you)
       :ARG1 (d / do-02
             :ARG0 y
             :ARG1 (t / that))
       :ARG1-of (r / real-04)
       :ARG1-of (r2 / request-confirmation-91))

# ::id tatoeba_eng.290
# ::snt " I ' m going to Boston tomorrow . " " So am I . "
(m / multi-sentence
       :snt1 (g / go-02
             :ARG0 (ii / i)
             :ARG4 (c / city
                   :name (n / name
                         :op1 "Boston"))
             :time (t / tomorrow))
       :snt2 (e / event
             :mod (ii2 / i)
             :mod (s / so)))

# ::id tatoeba_eng.291
# ::snt Can you tell me how to get to the station ?
(p / possible-01
       :ARG1 (t / tell-01
             :ARG0 (y / you)
             :ARG1 (t2 / thing
                   :manner-of (g / get-05
                         :ARG1 (ii / i)
                         :ARG2 (s / station)))
             :ARG2 ii)
       :polarity (a / amr-unknown))

# ::id tatoeba_eng.292
# ::snt Have you ever eaten in a restaurant alone ?
(e / eat-01
       :polarity (a / amr-unknown)
       :ARG0 (y / you)
       :location (r / restaurant)
       :time (e2 / ever)
       :mod (a2 / alone))

# ::id tatoeba_eng.293
# ::snt He is so aggressive that others avoid him .
(h / have-degree-91
       :ARG1 (h2 / he)
       :ARG2 (a / aggressive)
       :ARG3 (s / so)
       :ARG6 (a2 / avoid-01
             :ARG0 (o / other)
             :ARG1 h2))

# ::id tatoeba_eng.294
# ::snt I don ' t feel like eating out this evening .
(f / feel-06
       :polarity -
       :ARG0 (ii / i)
       :ARG1 (e / eat-01
             :ARG0 ii
             :location (o / out)
             :time (d / date-entity
                   :dayperiod (e2 / evening)
                   :mod (t / today))))

# ::id tatoeba_eng.295
# ::snt I hope that I don ' t have to shoot anybody .
(h / hope-01
       :ARG0 (ii / i)
       :ARG1 (o / obligate-01
             :polarity -
             :ARG1 ii
             :ARG2 (s / shoot-01
                   :ARG0 ii
                   :ARG2 (a / anybody))))

# ::id tatoeba_eng.296
# ::snt I opened an account in my daughter ' s name .
(o / open-01
       :ARG0 (ii / i)
       :ARG1 (a / account
             :prep-in (n / name
                   :poss (p / person
                         :ARG0-of (h / have-rel-role-91
                               :ARG1 ii
                               :ARG2 (d / daughter))))))

# ::id tatoeba_eng.297
# ::snt I received an email from Tom this morning .
(r / receive-01
       :ARG0 (ii / i)
       :ARG1 (e / email-01
             :ARG0 (p / person
                   :name (n / name
                         :op1 "Tom")))
       :ARG2 p
       :time (d / date-entity
             :dayperiod (m / morning)
             :mod (t / today)))

# ::id tatoeba_eng.298
# ::snt I still don ' t know why you didn ' t do that .
(k / know-01
       :polarity -
       :ARG0 (ii / i)
       :ARG1 (t / thing
             :ARG0-of (c / cause-01
                   :ARG1 (d / do-02
                         :polarity -
                         :ARG0 (y / you)
                         :ARG1 (t2 / that))))
       :mod (s / still))

# ::id tatoeba_eng.299
# ::snt I want to learn about American daily life .
(w / want-01
       :ARG0 (ii / i)
       :ARG1 (l / learn-01
             :ARG0 ii
             :ARG1 (l2 / life
                   :mod (c / country
                         :name (n / name
                               :op1 "America"))
                   :frequency (r / rate-entity-91
                         :ARG3 (t / temporal-quantity
                               :quant 1
                               :unit (d / day))))))

# ::id tatoeba_eng.300
# ::snt I ' m not accustomed to getting up so early .
(a / accustom-01
       :polarity -
       :ARG1 (ii / i)
       :ARG2 (g / get-up-00
             :ARG1 ii
             :time (e / early
                   :degree (s / so))))

# ::id tatoeba_eng.301
# ::snt I ' ve been practicing a long time for this .
(p / practice-01
       :ARG0 (ii / i)
       :ARG1 (t / this)
       :duration (t2 / time
             :ARG1-of (l / long-03)))

# ::id tatoeba_eng.302
# ::snt It was so dark that they could hardly see .
(d / dark-02
       :ARG1 (ii / it)
       :ARG2-of (h / have-degree-91
             :ARG1 ii
             :ARG3 (s / so)
             :ARG6 (p / possible-01
                   :ARG1 (s2 / see-01
                         :ARG0 (t / they))
                   :degree (h2 / hardly))))

# ::id tatoeba_eng.303
# ::snt It ' s dangerous to jump off a moving train .
(d / dangerous
       :domain (j / jump-03
             :ARG1 (t / train
                   :ARG1-of (m / move-01))
             :direction (o / off)))

# ::id tatoeba_eng.304
# ::snt My grandfather was killed in World War II .
(k / kill-01
       :ARG1 (p / person
             :ARG0-of (h / have-rel-role-91
                   :ARG1 (ii / i)
                   :ARG2 (g / grandfather)))
       :time (w / war
             :name (n / name
                   :op1 "World"
                   :op2 "War"
                   :op3 "II")))

# ::id tatoeba_eng.305
# ::snt She brought me a cup of tea without sugar .
(b / bring-01
       :ARG0 (s / she)
       :ARG1 (t / tea
             :ARG1-of (s2 / sugar-01
                   :polarity -)
             :quant (v / volume-quantity
                   :quant 1
                   :unit (c / cup)))
       :ARG2 (ii / i))

# ::id tatoeba_eng.306
# ::snt She loves the child as if it were her own .
(l / love-01
       :ARG0 (s / she)
       :ARG1 (c / child)
       :manner (a / as-if
             :op1 (o / own-01
                   :ARG0 s
                   :ARG1 c)))

# ::id tatoeba_eng.307
# ::snt So , what did you want to talk to me about ?
(w / want-01
       :ARG0 (y / you)
       :ARG1 (t / talk-01
             :ARG0 y
             :ARG1 (a / amr-unknown)
             :ARG2 (ii / i)))

# ::id tatoeba_eng.308
# ::snt Sorry , but you must have the wrong number .
(c / contrast-01
       :ARG1 (s / sorry-01)
       :ARG2 (o / obligate-01
             :ARG2 (h / have-03
                   :ARG0 (y / you)
                   :ARG1 (n / number
                         :ARG2-of (w / wrong-04
                               :ARG1 y)))))

# ::id tatoeba_eng.309
# ::snt The company is on the verge of bankruptcy .
(v / verge-01
       :ARG1 (c / company)
       :ARG2 (b / bankruptcy
             :domain c))

# ::id tatoeba_eng.310
# ::snt They can ' t be more than five minutes away .
(p / possible-01
       :polarity -
       :ARG1 (b / be-located-at-91
             :ARG1 (t / they)
             :ARG2 (a / away
                   :duration (m / more-than
                         :op1 (t2 / temporal-quantity
                               :quant 5
                               :unit (m2 / minute))))))

# ::id tatoeba_eng.311
# ::snt Tom calls Mary at least three times a day .
(c / call-02
       :ARG0 (p / person
             :name (n / name
                   :op1 "Tom"))
       :ARG1 (p2 / person
             :name (n2 / name
                   :op1 "Mary"))
       :frequency (r / rate-entity-91
             :ARG1 (a / at-least
                   :op1 3)
             :ARG2 (t / temporal-quantity
                   :quant 1
                   :unit (d / day))))

# ::id tatoeba_eng.312
# ::snt Tom doesn ' t seem to have a lot of friends .
(s / seem-01
       :ARG1 (h / have-03
             :polarity -
             :ARG0 (p / person
                   :name (n / name
                         :op1 "Tom"))
             :ARG1 (p2 / person
                   :ARG0-of (h2 / have-rel-role-91
                         :ARG1 p
                         :ARG2 (f / friend))
                   :quant (l / lot))))

# ::id tatoeba_eng.313
# ::snt Tom fell down the stairs and hit his head .
(a / and
       :op1 (f / fall-01
             :ARG1 (p / person
                   :name (n / name
                         :op1 "Tom")
                   :part (h / head))
             :ARG4 (d / down-01
                   :ARG1 p
                   :location (s / stair)))
       :op2 (h2 / hit-01
             :ARG1 h))

# ::id tatoeba_eng.314
# ::snt Tom had pictures of his baby on his phone .
(h / have-03
       :ARG0 (p / person
             :name (n / name
                   :op1 "Tom"))
       :ARG1 (p2 / picture
             :topic (p3 / person
                   :ARG0-of (h2 / have-rel-role-91
                         :ARG1 p
                         :ARG2 (b / baby))))
       :location (p4 / phone
             :poss p))

# ::id tatoeba_eng.315
# ::snt Tom plugged in the radio and turned it on .
(a / and
       :op1 (p / plug-in-03
             :ARG0 (p2 / person
                   :name (n / name
                         :op1 "Tom"))
             :ARG1 (r / radio))
       :op2 (t / turn-on-13
             :ARG0 p2
             :ARG1 r))

# ::id tatoeba_eng.316
# ::snt Tom told Mary he wanted to move to Boston .
(t / tell-01
       :ARG0 (p / person
             :name (n / name
                   :op1 "Tom"))
       :ARG1 (w / want-01
             :ARG0 p
             :ARG1 (m / move-01
                   :ARG0 p
                   :ARG2 (c / city
                         :name (n2 / name
                               :op1 "Boston"))))
       :ARG2 (p2 / person
             :name (n3 / name
                   :op1 "Mary")))

# ::id tatoeba_eng.317
# ::snt Tom went out to look for something to eat .
(g / go-out-17
       :ARG0 (p / person
             :name (n / name
                   :op1 "Tom"))
       :purpose (l / look-01
             :ARG0 p
             :ARG1 (s / something
                   :ARG1-of (e / eat-01
                         :ARG0 p))))

# ::id tatoeba_eng.318
# ::snt Tom will probably know what we need to do .
(p / probable
       :domain (k / know-01
             :ARG0 (p2 / person
                   :name (n / name
                         :op1 "Tom"))
             :ARG1 (t / thing
                   :ARG1-of (d / do-02
                         :ARG0 (w / we)
                         :ARG1-of (n2 / need-01
                               :ARG0 w)))))

# ::id tatoeba_eng.319
# ::snt Tom works for a trading company in Boston .
(w / work-01
       :ARG0 (p / person
             :name (n / name
                   :op1 "Tom"))
       :ARG2 (c / company
             :ARG0-of (t / trade-01)
             :location (c2 / city
                   :name (n2 / name
                         :op1 "Boston"))))

# ::id tatoeba_eng.320
# ::snt We have the right to live where we please .
(r / right-05
       :ARG1 (w / we)
       :ARG2 (l / live-01
             :ARG0 w
             :location (l2 / location
                   :ARG1-of (p / please-01
                         :ARG2 w))))

# ::id tatoeba_eng.321
# ::snt What reason did he give for being so late ?
(g / give-01
       :ARG0 (h / he)
       :ARG1 (r / reason
             :mod (a / amr-unknown)
             :ARG0-of (c / cause-01
                   :ARG1 (l / late-02
                         :ARG1 h
                         :degree (s / so)))))

# ::id tatoeba_eng.322
# ::snt While you ' re young , you should read a lot .
(r / recommend-01
       :ARG1 (r2 / read-01
             :ARG0 (y / you)
             :quant (l / lot)
             :time (y2 / young
                   :domain y)))

# ::id tatoeba_eng.323
# ::snt You don ' t think I need to do that , do you ?
(t / think-01
       :polarity -
       :ARG0 (y / you)
       :ARG1 (n / need-01
             :ARG0 (ii / i)
             :ARG1 (d / do-02
                   :ARG0 ii
                   :ARG1 (t2 / that)))
       :ARG1-of (r / request-confirmation-91))

# ::id tatoeba_eng.324
# ::snt You really don ' t know who that is , do you ?
(k / know-01
       :polarity -
       :ARG0 (y / you)
       :ARG1 (p / person
             :domain (t / that))
       :degree (r / really)
       :ARG1-of (r2 / request-confirmation-91
             :ARG2 y))

# ::id tatoeba_eng.325
# ::snt " Pass me the salt , please . " " Here you are . "
(m / multi-sentence
       :snt1 (p / pass-05
             :mode imperative
             :polite +
             :ARG0 (y / you)
             :ARG1 (s / salt)
             :ARG2 (ii / i))
       :snt2 (b / be-located-at-91
             :ARG1 (y2 / you)
             :ARG2 (h / here)))

# ::id tatoeba_eng.326
# ::snt Have you seen the recipe book that I wrote ?
(s / see-01
       :ARG0 (y / you)
       :ARG1 (b / book
             :topic (r / recipe)
             :ARG1-of (w / write-01
                   :ARG0 (ii / i)))
       :polarity (a / amr-unknown))

# ::id tatoeba_eng.327
# ::snt He gave us not only clothes but some money .
(g / give-01
       :ARG0 (h / he)
       :ARG1 (a / and
             :op1 (c / clothes
                   :mod (o / only
                         :polarity -))
             :op2 (m / money
                   :quant (s / some)))
       :ARG2 (w / we))

# ::id tatoeba_eng.328
# ::snt He ' s got two cats , one white and one black .
(h / have-03
       :ARG0 (h2 / he)
       :ARG1 (c / cat
             :quant 2
             :ARG2-of (ii / include-91
                   :ARG1 (a / and
                         :op1 (c2 / cat
                               :quant 1
                               :ARG1-of (w / white-03))
                         :op2 (c3 / cat
                               :quant 1
                               :ARG1-of (b / black-05))))))

# ::id tatoeba_eng.329
# ::snt I burned all the letters that you wrote me .
(b / burn-01
       :ARG0 (ii / i)
       :ARG1 (l / letter
             :mod (a / all)
             :ARG1-of (w / write-01
                   :ARG0 (y / you)
                   :ARG2 ii)))

# ::id tatoeba_eng.330
# ::snt I cannot afford a camera above 300 dollars .
(p / possible-01
       :polarity -
       :ARG1 (a / afford-01
             :ARG0 (ii / i)
             :ARG1 (c / camera
                   :ARG1-of (c2 / cost-01
                         :ARG2 (a2 / above
                               :op1 (m / monetary-quantity
                                     :quant 300
                                     :unit (d / dollar)))))))

# ::id tatoeba_eng.331
# ::snt I don ' t think that Tom will ever come back .
(t / think-01
       :ARG0 (ii / i)
       :ARG1 (c / come-01
             :polarity -
             :ARG1 (p / person
                   :name (n / name
                         :op1 "Tom"))
             :direction (b / back)
             :time (e / ever)))

# ::id tatoeba_eng.332
# ::snt I gave him what little money I had with me .
(g / give-01
       :ARG0 (ii / i)
       :ARG1 (m / money
             :quant (l / little)
             :ARG1-of (h / have-03
                   :ARG0 ii)
             :accompanier ii)
       :ARG2 (h2 / he))

# ::id tatoeba_eng.333
# ::snt I hope today ' s ball game won ' t be canceled .
(h / hope-01
       :ARG0 (ii / i)
       :ARG1 (c / cancel-01
             :polarity -
             :ARG1 (g / game
                   :mod (b / ball)
                   :time (t / today))))

# ::id tatoeba_eng.334
# ::snt I shouldn ' t have to put up with this noise .
(r / recommend-01
       :polarity -
       :ARG1 (o / obligate-01
             :ARG1 (ii / i)
             :ARG2 (p / put-up-12
                   :ARG0 ii
                   :ARG1 (n / noise
                         :mod (t / this)))))

# ::id tatoeba_eng.335
# ::snt I ' m concerned about the result of the exam .
(c / concern-01
       :ARG0 (r / result-01
             :ARG1 (e / exam))
       :ARG1 (ii / i))

# ::id tatoeba_eng.336
# ::snt I ' m sorry to have kept you waiting so long .
(s / sorry-01
       :ARG1 (ii / i)
       :ARG2 (k / keep-02
             :ARG0 ii
             :ARG1 (y / you)
             :ARG3 (w / wait-01
                   :ARG1 y
                   :ARG1-of (l / long-03
                         :degree (s2 / so)))))

# ::id tatoeba_eng.337
# ::snt I ' ve been thinking about it the entire day .
(t / think-01
       :ARG0 (ii / i)
       :ARG1 (ii2 / it)
       :duration (d / day
             :mod (e / entire)))

# ::id tatoeba_eng.338
# ::snt I ' ve never seen that man before in my life .
(s / see-01
       :polarity -
       :ARG0 (ii / i)
       :ARG1 (m / man
             :mod (t / that))
       :time (e / ever)
       :time (l / live-01
             :ARG0 ii)
       :time (b / before))

# ::id tatoeba_eng.339
# ::snt If you turn left , you ' ll see a coffee shop .
(s / see-01
       :ARG0 (y / you)
       :ARG1 (s2 / shop
             :mod (c / coffee))
       :condition (t / turn-01
             :ARG0 y
             :direction (l / left-20)))

# ::id tatoeba_eng.340
# ::snt Is the cat on the chair or under the chair ?
(a / amr-choice
       :op1 (c / cat
             :location (c2 / chair))
       :op2 (c3 / cat
             :location (u / under
                   :op1 c2)))

# ::id tatoeba_eng.341
# ::snt It ' s been over a week since I last saw Tom .
(s / see-01
       :ARG0 (ii / i)
       :ARG1 (p / person
             :name (n / name
                   :op1 "Tom"))
       :mod (l / last)
       :time (b / before
             :op1 (n2 / now)
             :quant (o / over
                   :op1 (t / temporal-quantity
                         :quant 1
                         :unit (w / week)))))

# ::id tatoeba_eng.342
# ::snt She was my colleague before they fired her .
(c / colleague
       :poss (ii / i)
       :domain (s / she)
       :time (b / before
             :op1 (f / fire-02
                   :ARG0 (t / they)
                   :ARG1 s)))

# ::id tatoeba_eng.343
# ::snt Someone told me that Tom had joined a cult .
(t / tell-01
       :ARG0 (s / someone)
       :ARG1 (j / join-04
             :ARG0 (p / person
                   :name (n / name
                         :op1 "Tom"))
             :ARG1 (c / cult))
       :ARG2 (ii / i))

# ::id tatoeba_eng.344
# ::snt The higher we climb , the colder it becomes .
(c / correlate-91
       :ARG1 (m / more
             :ARG3-of (h / have-degree-91
                   :ARG1 (c2 / climb-01
                         :ARG0 (w / we))
                   :ARG2 (h2 / high-02
                         :ARG1 c2)))
       :ARG2 (m2 / more
             :ARG3-of (h3 / have-degree-91
                   :ARG1 (b / become-01
                         :ARG1 c2)
                   :ARG2 (c3 / cold-01
                         :ARG1 b))))

# ::id tatoeba_eng.345
# ::snt The man fought bravely but finally gave in .
(c / contrast-01
       :ARG1 (f / fight-01
             :ARG0 (m / man)
             :manner (b / brave-02))
       :ARG2 (g / give-in-09
             :ARG0 m
             :time (f2 / final)))

# ::id tatoeba_eng.346
# ::snt The store is having a sale on summer goods .
(s / sell-01
       :ARG0 (s2 / store)
       :ARG1 (g / good
             :mod (d / date-entity
                   :season (s3 / summer))))

# ::id tatoeba_eng.347
# ::snt There is nothing for you to be angry about .
(a / anger-01
       :polarity -
       :ARG0 (n / nothing)
       :ARG1 (y / you))

# ::id tatoeba_eng.348
# ::snt Tom just made up that story . It ' s not true .
(m / multi-sentence
       :snt1 (m2 / make-up-10
             :ARG0 (p / person
                   :name (n / name
                         :op1 "Tom"))
             :ARG1 (s / story
                   :mod (t / that))
             :mod (j / just))
       :snt2 (t2 / true-01
             :polarity -
             :ARG1 (ii / it)))

# ::id tatoeba_eng.349
# ::snt Tom told me I didn ' t have to do that again .
(t / tell-01
       :ARG0 (p / person
             :name (n / name
                   :op1 "Tom"))
       :ARG1 (o / obligate-01
             :polarity -
             :ARG1 (ii / i)
             :ARG2 (d / do-02
                   :ARG0 ii
                   :ARG1 (t2 / that)
                   :mod (a / again)))
       :ARG2 ii)

# ::id tatoeba_eng.350
# ::snt Tom will be a university student this year .
(p / person
       :name (n / name
             :op1 "Tom")
       :ARG0-of (s / study-01
             :location (u / university)
             :time (y / year
                   :mod (t / this))))

# ::id tatoeba_eng.351
# ::snt We have an obesity problem in this country .
(h / have-03
       :ARG0 (w / we)
       :ARG1 (p / problem
             :topic (o / obesity))
       :location (c / country
             :mod (t / this)))

# ::id tatoeba_eng.352
# ::snt What time does school start in the morning ?
(s / start-01
       :ARG1 (s2 / school)
       :time (d / date-entity
             :dayperiod (m / morning)
             :mod (a / amr-unknown)))

# ::id tatoeba_eng.353
# ::snt Why don ' t you go grab us a couple of beers ?
(g / go-05
       :mode imperative
       :ARG0 (y / you)
       :ARG1 (g2 / grab-01
             :ARG0 y
             :ARG1 (b / beer
                   :quant (c / couple))
             :ARG4 (w / we))
       :polarity (a / amr-unknown)
       :purpose (a2 / amr-unknown))

# ::id tatoeba_eng.354
# ::snt You are responsible for what you have done .
(r / responsible-01
       :ARG0 (y / you)
       :ARG1 (t / thing
             :ARG1-of (d / do-02
                   :ARG0 y)))

# ::id tatoeba_eng.355
# ::snt You should be careful when you drive a car .
(r / recommend-01
       :ARG1 (c / care-04
             :ARG0 (y / you)
             :time (d / drive-01
                   :ARG0 y
                   :ARG1 (c2 / car)))
       :ARG2 y)

# ::id tatoeba_eng.356
# ::snt Bergen is the second largest city in Norway .
(h / have-degree-91
       :ARG1 (c / city
             :name (n / name
                   :op1 "Bergen"))
       :ARG2 (l / large)
       :ARG3 (m / most
             :ord (o / ordinal-entity
                   :value 2))
       :ARG5 (c2 / country
             :name (n2 / name
                   :op1 "Norway")))

# ::id tatoeba_eng.357
# ::snt Do you have any idea who ' s in the next room ?
(h / have-03
       :ARG0 (y / you)
       :ARG1 (ii / idea
             :mod (a / any)
             :topic (p / person
                   :location (r / room
                         :mod (n / next))))
       :polarity (a2 / amr-unknown))

# ::id tatoeba_eng.358
# ::snt Few people live to be one hundred years old .
(l / live-01
       :ARG0 (p / person
             :quant (f / few))
       :extent (t / temporal-quantity
             :quant 100
             :unit (y / year)))

# ::id tatoeba_eng.359
# ::snt He looked at the ship through his telescope .
(l / look-01
       :ARG0 (h / he)
       :ARG1 (s / ship)
       :instrument (t / telescope
             :poss h))

# ::id tatoeba_eng.360
# ::snt Help me pick out a tie to go with this suit .
(h / help-01
       :ARG0 (y / you)
       :ARG1 (p / pick-out-03
             :ARG0 (ii / i)
             :ARG1 (t / tie
                   :ARG1-of (g / go-22
                         :ARG2 (s / suit
                               :mod (t2 / this)))))
       :ARG2 ii)

# ::id tatoeba_eng.361
# ::snt I can ' t find anything wrong with his theory .
(p / possible-01
       :polarity -
       :ARG1 (f / find-01
             :ARG0 (ii / i)
             :ARG1 (a / anything
                   :ARG1-of (w / wrong-02
                         :ARG2 (t / theory
                               :poss (h / he))))))

# ::id tatoeba_eng.362
# ::snt I have a Canadian friend who is a carpenter .
(h / have-03
       :ARG0 (ii / i)
       :ARG1 (p / person
             :mod (c / country
                   :name (n / name
                         :op1 "Canada"))
             :ARG0-of (h2 / have-rel-role-91
                   :ARG1 ii
                   :ARG2 (f / friend))
             :ARG0-of (c2 / carpenter-01)))

# ::id tatoeba_eng.363
# ::snt I just want to be your friend , nothing more .
(a / and
       :op1 (w / want-01
             :ARG0 (ii / i)
             :ARG1 (h / have-rel-role-91
                   :ARG0 ii
                   :ARG1 (y / you)
                   :ARG2 (f / friend))
             :mod (j / just))
       :op2 (w2 / want-01
             :polarity -
             :ARG0 ii
             :ARG1 (m / more-than
                   :op1 h)))

# ::id tatoeba_eng.364
# ::snt I used to dream about becoming an astronaut .
(d / dream-01
       :ARG0 (ii / i)
       :ARG1 (b / become-01
             :ARG1 ii
             :ARG2 (a / astronaut))
       :time (u / use-03))

# ::id tatoeba_eng.365
# ::snt I ' m afraid that there isn ' t any coffee left .
(f / fear-01
       :ARG0 (ii / i)
       :ARG1 (l / leave-17
             :polarity -
             :ARG1 (c / coffee
                   :mod (a / any))))

# ::id tatoeba_eng.366
# ::snt I ' ve lost my umbrella . I must buy a new one .
(m / multi-sentence
       :snt1 (l / lose-02
             :ARG0 (ii / i)
             :ARG1 (u / umbrella
                   :poss ii))
       :snt2 (o / obligate-01
             :ARG1 (ii2 / i)
             :ARG2 (b / buy-01
                   :ARG0 ii2
                   :ARG1 (u2 / umbrella
                         :ARG1-of (n / new-01)))))

# ::id tatoeba_eng.367
# ::snt Let me see what ' s going on in the next room .
(l / let-01
       :mode imperative
       :ARG0 (y / you)
       :ARG1 (s / see-01
             :ARG0 (ii / i)
             :ARG1 (t / thing
                   :ARG1-of (g / go-on-15
                         :location (r / room
                               :mod (n / next))))))

# ::id tatoeba_eng.368
# ::snt My grandfather was a soldier during the war .
(s / soldier
       :time (w / war)
       :domain (p / person
             :ARG0-of (h / have-rel-role-91
                   :ARG1 (ii / i)
                   :ARG2 (g / grandfather))))

# ::id tatoeba_eng.369
# ::snt She earns a living by selling her paintings .
(e / earn-01
       :ARG0 (s / she)
       :ARG1 (l / living)
       :ARG3 (s2 / sell-01
             :ARG0 s
             :ARG1 (t / thing
                   :ARG1-of (p / paint-02
                         :ARG0 s))))

# ::id tatoeba_eng.370
# ::snt Take the one you like best , whichever it is .
(t / take-01
       :mode imperative
       :ARG0 (y / you)
       :ARG1 (o / one
             :ARG1-of (l / like-01
                   :ARG0 y
                   :ARG2-of (h / have-degree-91
                         :ARG1 o
                         :ARG3 (m / most))))
       :ARG1-of (r / regardless-91
             :ARG2 o))

# ::id tatoeba_eng.371
# ::snt The bride was wearing a white wedding dress .
(w / wear-01
       :ARG0 (b / bride)
       :ARG1 (d / dress
             :mod (w2 / wed-01)
             :ARG1-of (w3 / white-03)))

# ::id tatoeba_eng.372
# ::snt The school year begins on the 10th of April .
(b / begin-01
       :ARG1 (y / year
             :mod (s / school))
       :time (d / date-entity
             :month 4
             :day 10))

# ::id tatoeba_eng.373
# ::snt Tom arrived at the station at three o ' clock .
(a / arrive-01
       :ARG1 (p / person
             :name (n / name
                   :op1 "Tom"))
       :ARG4 (s / station)
       :time (d / date-entity
             :time "15:00"))

# ::id tatoeba_eng.374
# ::snt Tom is going to stay for another three days .
(s / stay-01
       :ARG1 (p / person
             :name (n / name
                   :op1 "Tom"))
       :duration (t / temporal-quantity
             :quant 3
             :unit (d / day)
             :mod (m / more)))

# ::id tatoeba_eng.375
# ::snt Tom pretended that he knew nothing about it .
(p / pretend-01
       :ARG0 (p2 / person
             :name (n / name
                   :op1 "Tom"))
       :ARG1 (k / know-01
             :ARG0 p2
             :ARG1 (n2 / nothing
                   :topic (ii / it))))

# ::id tatoeba_eng.376
# ::snt Tom wanted to know when Mary would get home .
(w / want-01
       :ARG0 (p / person
             :name (n / name
                   :op1 "Tom"))
       :ARG1 (k / know-01
             :ARG0 p
             :ARG1 (t / time
                   :time-of (g / get-05
                         :ARG1 (p2 / person
                               :name (n2 / name
                                     :op1 "Mary"))
                         :ARG2 (h / home)))))

# ::id tatoeba_eng.377
# ::snt We went without him because he wasn ' t ready .
(g / go-02
       :ARG0 (w / we)
       :manner (a / accompany-01
             :polarity -
             :ARG0 (h / he))
       :ARG1-of (c / cause-01
             :ARG0 (r / ready-02
                   :polarity -
                   :ARG1 h)))

# ::id tatoeba_eng.378
# ::snt Were all the members present at the meeting ?
(p / present-02
       :polarity (a / amr-unknown)
       :ARG1 (p2 / person
             :mod (a2 / all)
             :ARG0-of (h / have-org-role-91
                   :ARG2 (m / member)))
       :ARG2 (m2 / meet-03))

# ::id tatoeba_eng.379
# ::snt You must have me confused with someone else .
(ii / infer-01
       :ARG0 (y / you)
       :ARG1 (c / confuse-01
             :ARG0 y
             :ARG1 (ii2 / i)
             :ARG2 (s / someone
                   :mod (e / else))))

# ::id tatoeba_eng.380
# ::snt You shouldn ' t judge others on how they look .
(r / recommend-01
       :polarity -
       :ARG1 (j / judge-01
             :ARG0 (y / you)
             :ARG1 (p / person
                   :mod (o / other))
             :ARG3 (t / thing
                   :ARG1-of (l / look-02
                         :ARG0 p))))

# ::id tatoeba_eng.381
# ::snt You ' re a lot more beautiful than I remember .
(h / have-degree-91
       :ARG1 (y / you)
       :ARG2 (b / beautiful-02
             :ARG1 y)
       :ARG3 (m / more
             :quant (l / lot))
       :ARG4 (r / remember-01
             :ARG0 (ii / i)
             :ARG1 y))

# ::id tatoeba_eng.382
# ::snt A sentence normally has a subject and a verb .
(h / have-03
       :ARG0 (s / sentence)
       :ARG1 (a / and
             :op1 (s2 / subject)
             :op2 (v / verb))
       :ARG1-of (n / normal-02))

# ::id tatoeba_eng.383
# ::snt Because of the snow , I couldn ' t see anything .
(c / cause-01
       :ARG0 (s / snow)
       :ARG1 (p / possible-01
             :polarity -
             :ARG1 (s2 / see-01
                   :ARG0 (ii / i)
                   :ARG1 (a / anything))))

# ::id tatoeba_eng.384
# ::snt Don ' t throw it away just because it ' s broken .
(t / throw-away-07
       :mode imperative
       :polarity -
       :ARG0 (y / you)
       :ARG1 (ii / it)
       :ARG1-of (c / cause-01
             :ARG0 (b / break-01
                   :ARG1 ii)
             :mod (j / just)))

# ::id tatoeba_eng.385
# ::snt Have you ever seen a spider spinning its web ?
(s / see-01
       :ARG0 (y / you)
       :ARG1 (s2 / spin-01
             :ARG0 (s3 / spider)
             :ARG1 (w / web
                   :poss s3))
       :time (e / ever)
       :polarity (a / amr-unknown))

# ::id tatoeba_eng.386
# ::snt How long do you plan to stay in this country ?
(p / plan-01
       :ARG0 (y / you)
       :ARG1 (s / stay-01
             :ARG1 y
             :ARG3 (c / country
                   :mod (t / this))
             :duration (a / amr-unknown)))

# ::id tatoeba_eng.387
# ::snt I already told you not to smoke in your room .
(t / tell-01
       :ARG0 (ii / i)
       :ARG1 (s / smoke-02
             :polarity -
             :ARG0 (y / you)
             :location (r / room
                   :poss y))
       :ARG2 y
       :time (a / already))

# ::id tatoeba_eng.388
# ::snt I assumed that Tom was working with you guys .
(a / assume-02
       :ARG0 (ii / i)
       :ARG1 (w / work-01
             :ARG0 (p / person
                   :name (n / name
                         :op1 "Tom"))
             :ARG3 (y / you
                   :mod (g / guy))))

# ::id tatoeba_eng.389
# ::snt I didn ' t know when to switch the machine off .
(k / know-01
       :polarity -
       :ARG0 (ii / i)
       :ARG1 (t / time
             :time-of (s / switch-off-02
                   :ARG0 ii
                   :ARG1 (m / machine))))

# ::id tatoeba_eng.390
# ::snt I don ' t want to live in Australia any longer .
(w / want-01
       :ARG0 (ii / i)
       :ARG1 (l / live-01
             :polarity -
             :ARG0 ii
             :location (c / country
                   :name (n / name
                         :op1 "Australia"))
             :ARG1-of (l2 / long-03
                   :mod (a / any))))

# ::id tatoeba_eng.391
# ::snt I wonder whether Tom will tell me to do that .
(w / wonder-01
       :ARG0 (ii / i)
       :ARG1 (t / truth-value
             :polarity-of (t2 / tell-01
                   :ARG0 (p / person
                         :name (n / name
                               :op1 "Tom"))
                   :ARG1 (d / do-02
                         :ARG0 ii
                         :ARG1 (t3 / that))
                   :ARG2 ii)))

# ::id tatoeba_eng.392
# ::snt I ' ll do my best not to disturb your studying .
(h / have-degree-91
       :ARG1 (d / disturb-01
             :polarity -
             :ARG0 (ii / i)
             :ARG1 (s / study-01
                   :ARG0 (y / you)))
       :ARG2 (g / good-03
             :ARG1 ii
             :ARG2 d)
       :ARG3 (m / most))

# ::id tatoeba_eng.393
# ::snt It doesn ' t sound to me like you want to talk .
(s / sound-01
       :polarity -
       :ARG1 (w / want-01
             :ARG0 (y / you)
             :ARG1 (t / talk-01
                   :ARG0 y))
       :ARG3 (ii / i))

# ::id tatoeba_eng.394
# ::snt It was so cold that I stayed at home all day .
(h / have-degree-91
       :ARG1 (ii / it)
       :ARG2 (c / cold-01)
       :ARG3 (s / so)
       :ARG6 (s2 / stay-01
             :ARG1 (ii2 / i)
             :ARG3 (h2 / home)
             :duration (d / day
                   :mod (a / all))))

# ::id tatoeba_eng.395
# ::snt My brother is not satisfied with his new car .
(s / satisfy-01
       :polarity -
       :ARG0 (c / car
             :ARG1-of (n / new-01)
             :poss (p / person
                   :ARG0-of (h / have-rel-role-91
                         :ARG1 (ii / i)
                         :ARG2 (b / brother))))
       :ARG1 p)

# ::id tatoeba_eng.396
# ::snt My mother bought two bottles of orange juice .
(b / buy-01
       :ARG0 (p / person
             :ARG0-of (h / have-rel-role-91
                   :ARG1 (ii / i)
                   :ARG2 (m / mother)))
       :ARG1 (b2 / bottle
             :quant 2
             :ARG0-of (c / contain-01
                   :ARG1 (j / juice
                         :source (o / orange)))))

# ::id tatoeba_eng.397
# ::snt Take your umbrella with you in case it rains .
(t / take-01
       :mode imperative
       :ARG0 (y / you)
       :ARG1 (u / umbrella
             :poss y)
       :ARG3 y
       :condition (r / rain-01))

# ::id tatoeba_eng.398
# ::snt The bank opens at 9 a . m . and closes at 3 p . m .
(a / and
       :op1 (o / open-01
             :ARG1 (b / bank)
             :time (d / date-entity
                   :time "9:00"))
       :op2 (c / close-01
             :ARG1 b
             :time (d2 / date-entity
                   :time "15:00")))

# ::id tatoeba_eng.399
# ::snt The only book Tom has ever read is the Bible .
(b / book
       :mod (o / only)
       :ARG1-of (r / read-01
             :ARG0 (p / person
                   :name (n / name
                         :op1 "Tom"))
             :time (e / ever))
       :domain (b2 / book
             :name (n2 / name
                   :op1 "Bible")))

# ::id tatoeba_eng.400
# ::snt They are having breakfast at eight this week .
(b / breakfast-01
       :ARG0 (t / they)
       :time (d / date-entity
             :time "8:00")
       :time (w / week
             :mod (t2 / this)))
